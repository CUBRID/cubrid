Terminals unused in grammar

   ADD
   ALL
   AND
   AS
   ASC
   ATTRIBUTE
   AVG
   BAD_TOKEN
   BOGUS_ECHO
   BETWEEN
   CHANGE
   CHARACTER
   CHECK_
   CLASS
   COUNT
   CURRENT
   DATE_
   DATE_LIT
   DEFAULT
   DESC
   DIFFERENCE_
   DISTINCT
   EQ
   ESCAPE
   EXCEPT
   EXISTS
   FILE_
   FILE_PATH_LIT
   FUNCTION_
   GEQ
   GROUP_
   GT
   HAVING
   IN_
   INDEX
   INHERIT
   INTEGER
   INTERSECTION
   INT_LIT
   IS
   LDBVCLASS
   LEQ
   LIKE
   LT
   MAX_
   METHOD
   MIN_
   MINUS
   MONEY_LIT
   MULTISET_OF
   NEQ
   NULL_
   NUMERIC
   OF
   OID_
   OPTION
   OR
   ORDER
   PLUS
   PRECISION
   PRIVILEGES
   PUBLIC_
   READ_ONLY_
   REAL
   REAL_LIT
   SEQUENCE_OF
   SETEQ
   SETNEQ
   SET_OF
   SHARED
   SLASH
   SMALLINT
   SOME
   STATISTICS
   STRING
   SUBCLASS
   SUBSET
   SUBSETEQ
   SUM
   SUPERCLASS
   SUPERSET
   SUPERSETEQ
   TABLE
   TIME
   TIMESTAMP
   TIME_LIT
   UNIQUE
   USER
   UTIME
   VARBIT_
   VCLASS
   VIEW
   WHERE
   UNION
   STRUCT


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: opt_embedded_chunk_list

    2 opt_embedded_chunk_list: %empty
    3                        | embedded_chunk_list

    4 embedded_chunk_list: embedded_chunk_list embedded_chunk
    5                    | embedded_chunk

    6 $@1: %empty

    7 embedded_chunk: chunk_header $@1 chunk_body

    8 $@2: %empty

    9 $@3: %empty

   10 embedded_chunk: '{' $@2 opt_embedded_chunk_list $@3 '}'

   11 chunk_header: exec sql

   12 chunk_body: declare_section ';'
   13           | esql_statement ';'

   14 exec: EXEC

   15 sql: SQLX

   16 $@4: %empty

   17 $@5: %empty

   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 exec sql END DECLARE SECTION

   19 esql_statement: opt_repeated embedded_statement
   20               | opt_repeated declare_cursor_statement

   21 $@6: %empty

   22 esql_statement: opt_repeated $@6 csql_statement

   23 opt_repeated: %empty
   24             | REPEATED

   25 embedded_statement: whenever_statement
   26                   | connect_statement
   27                   | disconnect_statement
   28                   | open_statement
   29                   | close_statement
   30                   | describe_statement
   31                   | prepare_statement
   32                   | execute_statement
   33                   | fetch_statement
   34                   | INCLUDE SQLCA
   35                   | INCLUDE SQLDA
   36                   | commit_statement
   37                   | rollback_statement

   38 whenever_statement: WHENEVER whenever_action

   39 of_whenever_state: SQLWARNING_
   40                  | SQLERROR_
   41                  | NOT FOUND

   42 whenever_action: of_whenever_state CONTINUE_
   43                | of_whenever_state STOP_
   44                | of_whenever_state GOTO_ opt_COLON IDENTIFIER
   45                | of_whenever_state GO TO opt_COLON IDENTIFIER
   46                | of_whenever_state CALL_ IDENTIFIER

   47 opt_COLON: %empty
   48          | ':'

   49 connect_statement: CONNECT quasi_string_const opt_id_by_quasi

   50 opt_id_by_quasi: %empty
   51                | IDENTIFIED BY quasi_string_const opt_with_quasi

   52 opt_with_quasi: %empty
   53               | WITH quasi_string_const

   54 disconnect_statement: DISCONNECT

   55 declare_cursor_statement: DECLARE IDENTIFIER CURSOR_ FOR cursor_query_statement
   56                         | DECLARE IDENTIFIER CURSOR_ FOR dynamic_statement

   57 dynamic_statement: IDENTIFIER

   58 open_statement: OPEN cursor opt_for_read_only using_part

   59 opt_for_read_only: %empty
   60                  | FOR READ ONLY

   61 using_part: %empty
   62           | USING host_variable_lod

   63 descriptor_name: host_variable_wo_indicator

   64 close_statement: CLOSE cursor

   65 cursor: IDENTIFIER

   66 describe_statement: DESCRIBE dynamic_statement INTO descriptor_name
   67                   | DESCRIBE OBJECT host_variable_wo_indicator ON_ id_list_ INTO descriptor_name

   68 prepare_statement: PREPARE dynamic_statement FROM quasi_string_const

   69 $@7: %empty

   70 into_result: of_into_to $@7 host_variable_lod

   71 of_into_to: INTO
   72           | TO

   73 host_variable_lod: host_variable_list
   74                  | DESCRIPTOR descriptor_name

   75 quasi_string_const: STRING_LIT
   76                   | host_variable_wo_indicator

   77 $@8: %empty

   78 host_variable_list: $@8 host_variable_list_tail

   79 $@9: %empty

   80 host_variable_wo_indicator: $@9 host_var_w_opt_indicator

   81 id_list_: id_list_ ',' IDENTIFIER
   82         | IDENTIFIER

   83 execute_statement: EXECUTE dynamic_statement using_part opt_into_result
   84                  | EXECUTE IMMEDIATE quasi_string_const

   85 opt_into_result: %empty
   86                | into_result

   87 fetch_statement: FETCH cursor into_result
   88                | FETCH OBJECT host_variable_wo_indicator ON_ id_list_ into_result

   89 commit_statement: COMMIT opt_work

   90 opt_work: %empty
   91         | WORK

   92 rollback_statement: ROLLBACK opt_work

   93 csql_statement_head: ALTER
   94                    | ATTACH
   95                    | CALL_
   96                    | CREATE
   97                    | DROP
   98                    | END
   99                    | EVALUATE
  100                    | EXCLUDE
  101                    | FOR
  102                    | GET
  103                    | GRANT
  104                    | INSERT
  105                    | ON_
  106                    | REGISTER_
  107                    | RENAME
  108                    | REVOKE
  109                    | SELECT
  110                    | SET
  111                    | TRIGGER
  112                    | USE
  113                    | DELETE_
  114                    | UPDATE

  115 $@10: %empty

  116 $@11: %empty

  117 csql_statement: $@10 csql_statement_head $@11 csql_statement_tail

  118 declare_section_body: opt_ext_decl_list

  119 opt_ext_decl_list: %empty
  120                  | ext_decl_list

  121 ext_decl_list: ext_decl_list external_declaration
  122              | external_declaration

  123 $@12: %empty

  124 $@13: %empty

  125 external_declaration: $@12 opt_specifier_list optional_declarators $@13 end_declarator_list

  126 opt_specifier_list: %empty
  127                   | specifier_list

  128 optional_declarators: %empty
  129                     | init_declarator_list

  130 end_declarator_list: nS_td ';'

  131 specifier_list: specifier_list specifier_
  132               | specifier_

  133 specifier_: storage_class_specifier
  134           | type_specifier
  135           | type_qualifier

  136 storage_class_specifier: TYPEDEF_
  137                        | EXTERN_
  138                        | STATIC_
  139                        | AUTO_
  140                        | REGISTER_

  141 type_specifier: nS_ntd base_type_specifier
  142               | type_adjective
  143               | struct_specifier
  144               | enum_specifier

  145 base_type_specifier: VOID_
  146                    | CHAR_
  147                    | INT_
  148                    | FLOAT_
  149                    | DOUBLE_
  150                    | TYPEDEF_NAME
  151                    | VARCHAR_
  152                    | BIT_ opt_varying

  153 opt_varying: %empty
  154            | VARYING

  155 type_adjective: SHORT_
  156               | LONG_
  157               | SIGNED_
  158               | UNSIGNED_

  159 type_qualifier: CONST_
  160               | VOLATILE_

  161 $@14: %empty

  162 struct_specifier: nS_ntd of_struct_union $@14 struct_specifier_body

  163 $@15: %empty

  164 struct_specifier: nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body

  165 of_struct_union: STRUCT_
  166                | UNION_

  167 opt_struct_specifier_body: %empty
  168                          | struct_specifier_body

  169 $@16: %empty

  170 $@17: %empty

  171 struct_specifier_body: nS_td '{' $@16 struct_declaration_list $@17 '}'

  172 struct_tag: IDENTIFIER

  173 struct_declaration_list: struct_declaration_list struct_declaration
  174                        | struct_declaration

  175 $@18: %empty

  176 struct_declaration: specifier_qualifier_list optional_struct_declarator_list $@18 end_declarator_list

  177 $@19: %empty

  178 specifier_qualifier_list: $@19 specifier_list

  179 optional_struct_declarator_list: %empty
  180                                | struct_declarator_list

  181 struct_declarator_list: struct_declarator_list ',' struct_declarator
  182                       | struct_declarator

  183 $@20: %empty

  184 struct_declarator: ':' $@20 c_expression

  185 $@21: %empty

  186 struct_declarator: declarator_ ':' $@21 c_expression
  187                  | declarator_

  188 enum_specifier: ENUM '{' enumerator_list '}'
  189               | ENUM identifier optional_enumerator_list

  190 optional_enumerator_list: %empty
  191                         | '{' enumerator_list '}'

  192 enumerator_list: enumerator_list ',' enumerator
  193                | enumerator

  194 enumerator: identifier

  195 $@22: %empty

  196 enumerator: identifier '=' $@22 c_expression

  197 init_declarator_list: init_declarator_list ',' init_declarator
  198                     | init_declarator

  199 init_declarator: declarator_

  200 $@23: %empty

  201 init_declarator: declarator_ nS_td '=' $@23 c_expression nS_ntd

  202 declarator_: direct_declarator
  203            | pointer declarator_

  204 $@24: %empty

  205 direct_declarator: IDENTIFIER $@24 opt_param_spec_list

  206 $@25: %empty

  207 direct_declarator: '(' declarator_ ')' $@25 opt_param_spec_list

  208 opt_param_spec_list: %empty
  209                    | param_spec_list

  210 param_spec_list: param_spec_list param_spec
  211                | param_spec_list c_subscript
  212                | param_spec
  213                | c_subscript

  214 pointer: '*' opt_type_qualifier_list

  215 opt_type_qualifier_list: %empty
  216                        | type_qualifier_list

  217 type_qualifier_list: type_qualifier_list type_qualifier
  218                    | type_qualifier

  219 param_spec: '(' ')'
  220           | '(' push_name_scope param_type_list pop_name_scope ')'
  221           | '(' push_name_scope id_list_ pop_name_scope ')'

  222 push_name_scope: %empty

  223 pop_name_scope: %empty

  224 push_spec_scope: %empty

  225 pop_spec_scope: %empty

  226 param_type_list: push_spec_scope parameter_list pop_spec_scope

  227 parameter_list: parameter_declaration trailing_params
  228               | parameter_declaration

  229 trailing_params: param_decl_tail_list
  230                | ',' ELLIPSIS

  231 param_decl_tail_list: param_decl_tail_list ',' parameter_declaration
  232                     | ',' parameter_declaration

  233 $@26: %empty

  234 parameter_declaration: $@26 specifier_list opt_abstract_declarator nS_td

  235 opt_abstract_declarator: %empty
  236                        | abstract_declarator

  237 abstract_declarator: pointer opt_abstract_declarator
  238                    | direct_abstract_declarator

  239 $@27: %empty

  240 direct_abstract_declarator: '(' abstract_declarator ')' $@27 opt_direct_adecl_tail

  241 $@28: %empty

  242 direct_abstract_declarator: '(' opt_param_type_list ')' $@28 opt_direct_adecl_tail

  243 $@29: %empty

  244 direct_abstract_declarator: IDENTIFIER $@29 opt_direct_adecl_tail

  245 $@30: %empty

  246 direct_abstract_declarator: c_subscript $@30 opt_direct_adecl_tail

  247 opt_direct_adecl_tail: %empty
  248                      | direct_adecl_tail

  249 direct_adecl_tail: direct_adecl_tail c_subscript
  250                  | direct_adecl_tail '(' opt_param_type_list ')'
  251                  | c_subscript
  252                  | '(' opt_param_type_list ')'

  253 opt_param_type_list: %empty
  254                    | param_type_list

  255 nS_ntd: %empty

  256 nS_td: %empty

  257 identifier: nS_ntd TYPEDEF_NAME nS_td
  258           | IDENTIFIER
  259           | ENUMERATION_CONSTANT

  260 $@31: %empty

  261 c_subscript: '[' $@31 c_subscript_body ']'

  262 c_subscript_body: %empty
  263                 | c_expr

  264 c_expression: c_expr

  265 c_expr: any_list

  266 any_list: any_list any
  267         | any

  268 any_expr: %empty
  269         | acs_list

  270 acs_list: acs_list of_any_comma_semi
  271         | of_any_comma_semi

  272 of_any_comma_semi: any
  273                  | ','
  274                  | ';'

  275 any: GENERIC_TOKEN
  276    | '(' any_expr ')'
  277    | '[' any_expr ']'
  278    | '{' any_expr '}'

  279 host_variable_list_tail: host_variable_list_tail ',' host_var_w_opt_indicator
  280                        | host_var_w_opt_indicator

  281 indicator_var: %empty
  282              | '#' hostvar
  283              | INDICATOR '#' hostvar
  284              | INDICATOR hostvar

  285 $@32: %empty

  286 host_var_w_opt_indicator: $@32 host_variable indicator_var

  287 $@33: %empty

  288 host_variable: ':' $@33 hostvar

  289 hostvar: host_ref
  290        | '*' CONST_ hostvar
  291        | '*' VOLATILE_ hostvar
  292        | '*' hostvar
  293        | '&' host_ref

  294 $@34: %empty

  295 host_ref: IDENTIFIER $@34 opt_host_ref_tail

  296 $@35: %empty

  297 host_ref: '(' hostvar ')' $@35 opt_host_ref_tail

  298 opt_host_ref_tail: %empty
  299                  | host_ref_tail

  300 host_ref_tail: host_ref_tail host_var_subscript
  301              | host_ref_tail '.' IDENTIFIER
  302              | host_ref_tail PTR_OP IDENTIFIER
  303              | host_var_subscript
  304              | '.' IDENTIFIER
  305              | PTR_OP IDENTIFIER

  306 $@36: %empty

  307 host_var_subscript: '[' $@36 host_var_subscript_body

  308 host_var_subscript_body: opt_hv_sub_list ']'

  309 $@37: %empty

  310 hv_sub: '(' $@37 opt_hv_sub_list ')'

  311 $@38: %empty

  312 hv_sub: '[' $@38 opt_hv_sub_list ']'

  313 $@39: %empty

  314 hv_sub: '{' $@39 opt_hv_sub_list '}'

  315 opt_hv_sub_list: %empty
  316                | hv_sub_list

  317 hv_sub_list: hv_sub_list hv_sub
  318            | hv_sub

  319 csql_statement_tail: opt_buffer_sql_list

  320 opt_buffer_sql_list: %empty
  321                    | buffer_sql_list

  322 buffer_sql_list: buffer_sql_list buffer_sql
  323                | buffer_sql

  324 buffer_sql: host_var_w_opt_indicator
  325           | DESCRIPTOR host_variable_wo_indicator
  326           | var_mode_follow_set

  327 var_mode_follow_set: '*'
  328                    | ','
  329                    | '('
  330                    | ')'
  331                    | '{'
  332                    | '}'
  333                    | GENERIC_TOKEN
  334                    | IDENTIFIER
  335                    | INTO
  336                    | TO
  337                    | FROM
  338                    | SELECT
  339                    | VALUES
  340                    | ON_
  341                    | WITH

  342 $@40: %empty

  343 cursor_query_statement: $@40 of_select_lp opt_buffer_sql_list

  344 of_select_lp: SELECT
  345             | '('


Terminals, with rules where they appear

$end (0) 0
'#' (35) 282 283
'&' (38) 293
'(' (40) 207 219 220 221 240 242 250 252 276 297 310 329 345
')' (41) 207 219 220 221 240 242 250 252 276 297 310 330
'*' (42) 214 290 291 292 327
',' (44) 81 181 192 197 230 231 232 273 279 328
'.' (46) 301 304
':' (58) 48 184 186 288
';' (59) 12 13 18 130 274
'=' (61) 196 201
'[' (91) 261 277 307 312
']' (93) 261 277 308 312
'{' (123) 10 171 188 191 278 314 331
'}' (125) 10 171 188 191 278 314 332
error (256)
ADD (258)
ALL (259)
ALTER (260) 93
AND (261)
AS (262)
ASC (263)
ATTRIBUTE (264)
ATTACH (265) 94
AUTO_ (266) 139
AVG (267)
BAD_TOKEN (268)
BOGUS_ECHO (269)
BEGIN_ (270) 18
BETWEEN (271)
BIT_ (272) 152
BY (273) 51
CALL_ (274) 46 95
CHANGE (275)
CHAR_ (276) 146
CHARACTER (277)
CHECK_ (278)
CLASS (279)
CLOSE (280) 64
COMMIT (281) 89
CONNECT (282) 49
CONST_ (283) 159 290
CONTINUE_ (284) 42
COUNT (285)
CREATE (286) 96
CURRENT (287)
CURSOR_ (288) 55 56
DATE_ (289)
DATE_LIT (290)
DECLARE (291) 18 55 56
DEFAULT (292)
DELETE_ (293) 113
DESC (294)
DESCRIBE (295) 66 67
DESCRIPTOR (296) 74 325
DIFFERENCE_ (297)
DISCONNECT (298) 54
DISTINCT (299)
DOUBLE_ (300) 149
DROP (301) 97
ELLIPSIS (302) 230
END (303) 18 98
ENUM (304) 188 189
EQ (305)
ESCAPE (306)
EVALUATE (307) 99
EXCEPT (308)
EXCLUDE (309) 100
EXECUTE (310) 83 84
EXISTS (311)
EXTERN_ (312) 137
FETCH (313) 87 88
FILE_ (314)
FILE_PATH_LIT (315)
FLOAT_ (316) 148
FOR (317) 55 56 60 101
FOUND (318) 41
FROM (319) 68 337
FUNCTION_ (320)
GENERIC_TOKEN (321) 275 333
GEQ (322)
GET (323) 102
GO (324) 45
GOTO_ (325) 44
GRANT (326) 103
GROUP_ (327)
GT (328)
HAVING (329)
IDENTIFIED (330) 51
IMMEDIATE (331) 84
IN_ (332)
INCLUDE (333) 34 35
INDEX (334)
INDICATOR (335) 283 284
INHERIT (336)
INSERT (337) 104
INTEGER (338)
INTERSECTION (339)
INTO (340) 66 67 71 335
INT_ (341) 147
INT_LIT (342)
IS (343)
LDBVCLASS (344)
LEQ (345)
LIKE (346)
LONG_ (347) 156
LT (348)
MAX_ (349)
METHOD (350)
MIN_ (351)
MINUS (352)
MONEY_LIT (353)
MULTISET_OF (354)
NEQ (355)
NOT (356) 41
NULL_ (357)
NUMERIC (358)
OBJECT (359) 67 88
OF (360)
OID_ (361)
ON_ (362) 67 88 105 340
ONLY (363) 60
OPEN (364) 58
OPTION (365)
OR (366)
ORDER (367)
PLUS (368)
PRECISION (369)
PREPARE (370) 68
PRIVILEGES (371)
PTR_OP (372) 302 305
PUBLIC_ (373)
READ (374) 60
READ_ONLY_ (375)
REAL (376)
REAL_LIT (377)
REGISTER_ (378) 106 140
RENAME (379) 107
REPEATED (380) 24
REVOKE (381) 108
ROLLBACK (382) 92
SECTION (383) 18
SELECT (384) 109 338 344
SEQUENCE_OF (385)
SET (386) 110
SETEQ (387)
SETNEQ (388)
SET_OF (389)
SHARED (390)
SHORT_ (391) 155
SIGNED_ (392) 157
SLASH (393)
SMALLINT (394)
SOME (395)
SQLCA (396) 34
SQLDA (397) 35
SQLERROR_ (398) 40
SQLWARNING_ (399) 39
STATIC_ (400) 138
STATISTICS (401)
STOP_ (402) 43
STRING (403)
STRUCT_ (404) 165
SUBCLASS (405)
SUBSET (406)
SUBSETEQ (407)
SUM (408)
SUPERCLASS (409)
SUPERSET (410)
SUPERSETEQ (411)
TABLE (412)
TIME (413)
TIMESTAMP (414)
TIME_LIT (415)
TO (416) 45 72 336
TRIGGER (417) 111
TYPEDEF_ (418) 136
UNION_ (419) 166
UNIQUE (420)
UNSIGNED_ (421) 158
UPDATE (422) 114
USE (423) 112
USER (424)
USING (425) 62
UTIME (426)
VALUES (427) 339
VARBIT_ (428)
VARCHAR_ (429) 151
VARYING (430) 154
VCLASS (431)
VIEW (432)
VOID_ (433) 145
VOLATILE_ (434) 160 291
WHENEVER (435) 38
WHERE (436)
WITH (437) 53 341
WORK (438) 91
ENUMERATION_CONSTANT (439) 259
TYPEDEF_NAME (440) 150 257
STRING_LIT (441) 75
IDENTIFIER (442) 44 45 46 55 56 57 65 81 82 172 205 244 258 295 301
    302 304 305 334
EXEC (443) 14
SQLX (444) 15
UNION (445)
STRUCT (446)


Nonterminals, with rules where they appear

$accept (206)
    on left: 0
translation_unit (207)
    on left: 1, on right: 0
opt_embedded_chunk_list (208)
    on left: 2 3, on right: 1 10
embedded_chunk_list (209)
    on left: 4 5, on right: 3 4
embedded_chunk (210)
    on left: 7 10, on right: 4 5
$@1 (211)
    on left: 6, on right: 7
$@2 (212)
    on left: 8, on right: 10
$@3 (213)
    on left: 9, on right: 10
chunk_header (214)
    on left: 11, on right: 7
chunk_body (215)
    on left: 12 13, on right: 7
exec (216)
    on left: 14, on right: 11 18
sql (217)
    on left: 15, on right: 11 18
declare_section (218)
    on left: 18, on right: 12
$@4 (219)
    on left: 16, on right: 18
$@5 (220)
    on left: 17, on right: 18
esql_statement (221)
    on left: 19 20 22, on right: 13
$@6 (222)
    on left: 21, on right: 22
opt_repeated (223)
    on left: 23 24, on right: 19 20 22
embedded_statement (224)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37, on right: 19
whenever_statement (225)
    on left: 38, on right: 25
of_whenever_state (226)
    on left: 39 40 41, on right: 42 43 44 45 46
whenever_action (227)
    on left: 42 43 44 45 46, on right: 38
opt_COLON (228)
    on left: 47 48, on right: 44 45
connect_statement (229)
    on left: 49, on right: 26
opt_id_by_quasi (230)
    on left: 50 51, on right: 49
opt_with_quasi (231)
    on left: 52 53, on right: 51
disconnect_statement (232)
    on left: 54, on right: 27
declare_cursor_statement (233)
    on left: 55 56, on right: 20
dynamic_statement (234)
    on left: 57, on right: 56 66 68 83
open_statement (235)
    on left: 58, on right: 28
opt_for_read_only (236)
    on left: 59 60, on right: 58
using_part (237)
    on left: 61 62, on right: 58 83
descriptor_name (238)
    on left: 63, on right: 66 67 74
close_statement (239)
    on left: 64, on right: 29
cursor (240)
    on left: 65, on right: 58 64 87
describe_statement (241)
    on left: 66 67, on right: 30
prepare_statement (242)
    on left: 68, on right: 31
into_result (243)
    on left: 70, on right: 86 87 88
$@7 (244)
    on left: 69, on right: 70
of_into_to (245)
    on left: 71 72, on right: 70
host_variable_lod (246)
    on left: 73 74, on right: 62 70
quasi_string_const (247)
    on left: 75 76, on right: 49 51 53 68 84
host_variable_list (248)
    on left: 78, on right: 73
$@8 (249)
    on left: 77, on right: 78
host_variable_wo_indicator (250)
    on left: 80, on right: 63 67 76 88 325
$@9 (251)
    on left: 79, on right: 80
id_list_ (252)
    on left: 81 82, on right: 67 81 88 221
execute_statement (253)
    on left: 83 84, on right: 32
opt_into_result (254)
    on left: 85 86, on right: 83
fetch_statement (255)
    on left: 87 88, on right: 33
commit_statement (256)
    on left: 89, on right: 36
opt_work (257)
    on left: 90 91, on right: 89 92
rollback_statement (258)
    on left: 92, on right: 37
csql_statement_head (259)
    on left: 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
    109 110 111 112 113 114, on right: 117
csql_statement (260)
    on left: 117, on right: 22
$@10 (261)
    on left: 115, on right: 117
$@11 (262)
    on left: 116, on right: 117
declare_section_body (263)
    on left: 118, on right: 18
opt_ext_decl_list (264)
    on left: 119 120, on right: 118
ext_decl_list (265)
    on left: 121 122, on right: 120 121
external_declaration (266)
    on left: 125, on right: 121 122
$@12 (267)
    on left: 123, on right: 125
$@13 (268)
    on left: 124, on right: 125
opt_specifier_list (269)
    on left: 126 127, on right: 125
optional_declarators (270)
    on left: 128 129, on right: 125
end_declarator_list (271)
    on left: 130, on right: 125 176
specifier_list (272)
    on left: 131 132, on right: 127 131 178 234
specifier_ (273)
    on left: 133 134 135, on right: 131 132
storage_class_specifier (274)
    on left: 136 137 138 139 140, on right: 133
type_specifier (275)
    on left: 141 142 143 144, on right: 134
base_type_specifier (276)
    on left: 145 146 147 148 149 150 151 152, on right: 141
opt_varying (277)
    on left: 153 154, on right: 152
type_adjective (278)
    on left: 155 156 157 158, on right: 142
type_qualifier (279)
    on left: 159 160, on right: 135 217 218
struct_specifier (280)
    on left: 162 164, on right: 143
$@14 (281)
    on left: 161, on right: 162
$@15 (282)
    on left: 163, on right: 164
of_struct_union (283)
    on left: 165 166, on right: 162 164
opt_struct_specifier_body (284)
    on left: 167 168, on right: 164
struct_specifier_body (285)
    on left: 171, on right: 162 168
$@16 (286)
    on left: 169, on right: 171
$@17 (287)
    on left: 170, on right: 171
struct_tag (288)
    on left: 172, on right: 164
struct_declaration_list (289)
    on left: 173 174, on right: 171 173
struct_declaration (290)
    on left: 176, on right: 173 174
$@18 (291)
    on left: 175, on right: 176
specifier_qualifier_list (292)
    on left: 178, on right: 176
$@19 (293)
    on left: 177, on right: 178
optional_struct_declarator_list (294)
    on left: 179 180, on right: 176
struct_declarator_list (295)
    on left: 181 182, on right: 180 181
struct_declarator (296)
    on left: 184 186 187, on right: 181 182
$@20 (297)
    on left: 183, on right: 184
$@21 (298)
    on left: 185, on right: 186
enum_specifier (299)
    on left: 188 189, on right: 144
optional_enumerator_list (300)
    on left: 190 191, on right: 189
enumerator_list (301)
    on left: 192 193, on right: 188 191 192
enumerator (302)
    on left: 194 196, on right: 192 193
$@22 (303)
    on left: 195, on right: 196
init_declarator_list (304)
    on left: 197 198, on right: 129 197
init_declarator (305)
    on left: 199 201, on right: 197 198
$@23 (306)
    on left: 200, on right: 201
declarator_ (307)
    on left: 202 203, on right: 186 187 199 201 203 207
direct_declarator (308)
    on left: 205 207, on right: 202
$@24 (309)
    on left: 204, on right: 205
$@25 (310)
    on left: 206, on right: 207
opt_param_spec_list (311)
    on left: 208 209, on right: 205 207
param_spec_list (312)
    on left: 210 211 212 213, on right: 209 210 211
pointer (313)
    on left: 214, on right: 203 237
opt_type_qualifier_list (314)
    on left: 215 216, on right: 214
type_qualifier_list (315)
    on left: 217 218, on right: 216 217
param_spec (316)
    on left: 219 220 221, on right: 210 212
push_name_scope (317)
    on left: 222, on right: 220 221
pop_name_scope (318)
    on left: 223, on right: 220 221
push_spec_scope (319)
    on left: 224, on right: 226
pop_spec_scope (320)
    on left: 225, on right: 226
param_type_list (321)
    on left: 226, on right: 220 254
parameter_list (322)
    on left: 227 228, on right: 226
trailing_params (323)
    on left: 229 230, on right: 227
param_decl_tail_list (324)
    on left: 231 232, on right: 229 231
parameter_declaration (325)
    on left: 234, on right: 227 228 231 232
$@26 (326)
    on left: 233, on right: 234
opt_abstract_declarator (327)
    on left: 235 236, on right: 234 237
abstract_declarator (328)
    on left: 237 238, on right: 236 240
direct_abstract_declarator (329)
    on left: 240 242 244 246, on right: 238
$@27 (330)
    on left: 239, on right: 240
$@28 (331)
    on left: 241, on right: 242
$@29 (332)
    on left: 243, on right: 244
$@30 (333)
    on left: 245, on right: 246
opt_direct_adecl_tail (334)
    on left: 247 248, on right: 240 242 244 246
direct_adecl_tail (335)
    on left: 249 250 251 252, on right: 248 249 250
opt_param_type_list (336)
    on left: 253 254, on right: 242 250 252
nS_ntd (337)
    on left: 255, on right: 141 162 164 201 257
nS_td (338)
    on left: 256, on right: 130 171 201 234 257
identifier (339)
    on left: 257 258 259, on right: 189 194 196
c_subscript (340)
    on left: 261, on right: 211 213 246 249 251
$@31 (341)
    on left: 260, on right: 261
c_subscript_body (342)
    on left: 262 263, on right: 261
c_expression (343)
    on left: 264, on right: 184 186 196 201
c_expr (344)
    on left: 265, on right: 263 264
any_list (345)
    on left: 266 267, on right: 265 266
any_expr (346)
    on left: 268 269, on right: 276 277 278
acs_list (347)
    on left: 270 271, on right: 269 270
of_any_comma_semi (348)
    on left: 272 273 274, on right: 270 271
any (349)
    on left: 275 276 277 278, on right: 266 267 272
host_variable_list_tail (350)
    on left: 279 280, on right: 78 279
indicator_var (351)
    on left: 281 282 283 284, on right: 286
host_var_w_opt_indicator (352)
    on left: 286, on right: 80 279 280 324
$@32 (353)
    on left: 285, on right: 286
host_variable (354)
    on left: 288, on right: 286
$@33 (355)
    on left: 287, on right: 288
hostvar (356)
    on left: 289 290 291 292 293, on right: 282 283 284 288 290 291
    292 297
host_ref (357)
    on left: 295 297, on right: 289 293
$@34 (358)
    on left: 294, on right: 295
$@35 (359)
    on left: 296, on right: 297
opt_host_ref_tail (360)
    on left: 298 299, on right: 295 297
host_ref_tail (361)
    on left: 300 301 302 303 304 305, on right: 299 300 301 302
host_var_subscript (362)
    on left: 307, on right: 300 303
$@36 (363)
    on left: 306, on right: 307
host_var_subscript_body (364)
    on left: 308, on right: 307
hv_sub (365)
    on left: 310 312 314, on right: 317 318
$@37 (366)
    on left: 309, on right: 310
$@38 (367)
    on left: 311, on right: 312
$@39 (368)
    on left: 313, on right: 314
opt_hv_sub_list (369)
    on left: 315 316, on right: 308 310 312 314
hv_sub_list (370)
    on left: 317 318, on right: 316 317
csql_statement_tail (371)
    on left: 319, on right: 117
opt_buffer_sql_list (372)
    on left: 320 321, on right: 319 343
buffer_sql_list (373)
    on left: 322 323, on right: 321 322
buffer_sql (374)
    on left: 324 325 326, on right: 322 323
var_mode_follow_set (375)
    on left: 327 328 329 330 331 332 333 334 335 336 337 338 339 340
    341, on right: 326
cursor_query_statement (376)
    on left: 343, on right: 55
$@40 (377)
    on left: 342, on right: 343
of_select_lp (378)
    on left: 344 345, on right: 343


State 0

    0 $accept: . translation_unit $end
    1 translation_unit: . opt_embedded_chunk_list
    2 opt_embedded_chunk_list: . %empty  [$end]
    3                        | . embedded_chunk_list
    4 embedded_chunk_list: . embedded_chunk_list embedded_chunk
    5                    | . embedded_chunk
    7 embedded_chunk: . chunk_header $@1 chunk_body
   10               | . '{' $@2 opt_embedded_chunk_list $@3 '}'
   11 chunk_header: . exec sql
   14 exec: . EXEC

    EXEC  shift, and go to state 1
    '{'   shift, and go to state 2

    $default  reduce using rule 2 (opt_embedded_chunk_list)

    translation_unit         go to state 3
    opt_embedded_chunk_list  go to state 4
    embedded_chunk_list      go to state 5
    embedded_chunk           go to state 6
    chunk_header             go to state 7
    exec                     go to state 8


State 1

   14 exec: EXEC .

    $default  reduce using rule 14 (exec)


State 2

    8 $@2: . %empty
   10 embedded_chunk: '{' . $@2 opt_embedded_chunk_list $@3 '}'

    $default  reduce using rule 8 ($@2)

    $@2  go to state 9


State 3

    0 $accept: translation_unit . $end

    $end  shift, and go to state 10


State 4

    1 translation_unit: opt_embedded_chunk_list .

    $default  reduce using rule 1 (translation_unit)


State 5

    3 opt_embedded_chunk_list: embedded_chunk_list .  [$end, '}']
    4 embedded_chunk_list: embedded_chunk_list . embedded_chunk
    7 embedded_chunk: . chunk_header $@1 chunk_body
   10               | . '{' $@2 opt_embedded_chunk_list $@3 '}'
   11 chunk_header: . exec sql
   14 exec: . EXEC

    EXEC  shift, and go to state 1
    '{'   shift, and go to state 2

    $default  reduce using rule 3 (opt_embedded_chunk_list)

    embedded_chunk  go to state 11
    chunk_header    go to state 7
    exec            go to state 8


State 6

    5 embedded_chunk_list: embedded_chunk .

    $default  reduce using rule 5 (embedded_chunk_list)


State 7

    6 $@1: . %empty
    7 embedded_chunk: chunk_header . $@1 chunk_body

    $default  reduce using rule 6 ($@1)

    $@1  go to state 12


State 8

   11 chunk_header: exec . sql
   15 sql: . SQLX

    SQLX  shift, and go to state 13

    sql  go to state 14


State 9

    2 opt_embedded_chunk_list: . %empty  ['}']
    3                        | . embedded_chunk_list
    4 embedded_chunk_list: . embedded_chunk_list embedded_chunk
    5                    | . embedded_chunk
    7 embedded_chunk: . chunk_header $@1 chunk_body
   10               | . '{' $@2 opt_embedded_chunk_list $@3 '}'
   10               | '{' $@2 . opt_embedded_chunk_list $@3 '}'
   11 chunk_header: . exec sql
   14 exec: . EXEC

    EXEC  shift, and go to state 1
    '{'   shift, and go to state 2

    $default  reduce using rule 2 (opt_embedded_chunk_list)

    opt_embedded_chunk_list  go to state 15
    embedded_chunk_list      go to state 5
    embedded_chunk           go to state 6
    chunk_header             go to state 7
    exec                     go to state 8


State 10

    0 $accept: translation_unit $end .

    $default  accept


State 11

    4 embedded_chunk_list: embedded_chunk_list embedded_chunk .

    $default  reduce using rule 4 (embedded_chunk_list)


State 12

    7 embedded_chunk: chunk_header $@1 . chunk_body
   12 chunk_body: . declare_section ';'
   13           | . esql_statement ';'
   18 declare_section: . BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 exec sql END DECLARE SECTION
   19 esql_statement: . opt_repeated embedded_statement
   20               | . opt_repeated declare_cursor_statement
   22               | . opt_repeated $@6 csql_statement
   23 opt_repeated: . %empty  [ALTER, ATTACH, CALL_, CLOSE, COMMIT, CONNECT, CREATE, DECLARE, DELETE_, DESCRIBE, DISCONNECT, DROP, END, EVALUATE, EXCLUDE, EXECUTE, FETCH, FOR, GET, GRANT, INCLUDE, INSERT, ON_, OPEN, PREPARE, REGISTER_, RENAME, REVOKE, ROLLBACK, SELECT, SET, TRIGGER, UPDATE, USE, WHENEVER]
   24             | . REPEATED

    BEGIN_    shift, and go to state 16
    REPEATED  shift, and go to state 17

    $default  reduce using rule 23 (opt_repeated)

    chunk_body       go to state 18
    declare_section  go to state 19
    esql_statement   go to state 20
    opt_repeated     go to state 21


State 13

   15 sql: SQLX .

    $default  reduce using rule 15 (sql)


State 14

   11 chunk_header: exec sql .

    $default  reduce using rule 11 (chunk_header)


State 15

    9 $@3: . %empty
   10 embedded_chunk: '{' $@2 opt_embedded_chunk_list . $@3 '}'

    $default  reduce using rule 9 ($@3)

    $@3  go to state 22


State 16

   18 declare_section: BEGIN_ . DECLARE SECTION ';' $@4 declare_section_body $@5 exec sql END DECLARE SECTION

    DECLARE  shift, and go to state 23


State 17

   24 opt_repeated: REPEATED .

    $default  reduce using rule 24 (opt_repeated)


State 18

    7 embedded_chunk: chunk_header $@1 chunk_body .

    $default  reduce using rule 7 (embedded_chunk)


State 19

   12 chunk_body: declare_section . ';'

    ';'  shift, and go to state 24


State 20

   13 chunk_body: esql_statement . ';'

    ';'  shift, and go to state 25


State 21

   19 esql_statement: opt_repeated . embedded_statement
   20               | opt_repeated . declare_cursor_statement
   21 $@6: . %empty  [ALTER, ATTACH, CALL_, CREATE, DELETE_, DROP, END, EVALUATE, EXCLUDE, FOR, GET, GRANT, INSERT, ON_, REGISTER_, RENAME, REVOKE, SELECT, SET, TRIGGER, UPDATE, USE]
   22 esql_statement: opt_repeated . $@6 csql_statement
   25 embedded_statement: . whenever_statement
   26                   | . connect_statement
   27                   | . disconnect_statement
   28                   | . open_statement
   29                   | . close_statement
   30                   | . describe_statement
   31                   | . prepare_statement
   32                   | . execute_statement
   33                   | . fetch_statement
   34                   | . INCLUDE SQLCA
   35                   | . INCLUDE SQLDA
   36                   | . commit_statement
   37                   | . rollback_statement
   38 whenever_statement: . WHENEVER whenever_action
   49 connect_statement: . CONNECT quasi_string_const opt_id_by_quasi
   54 disconnect_statement: . DISCONNECT
   55 declare_cursor_statement: . DECLARE IDENTIFIER CURSOR_ FOR cursor_query_statement
   56                         | . DECLARE IDENTIFIER CURSOR_ FOR dynamic_statement
   58 open_statement: . OPEN cursor opt_for_read_only using_part
   64 close_statement: . CLOSE cursor
   66 describe_statement: . DESCRIBE dynamic_statement INTO descriptor_name
   67                   | . DESCRIBE OBJECT host_variable_wo_indicator ON_ id_list_ INTO descriptor_name
   68 prepare_statement: . PREPARE dynamic_statement FROM quasi_string_const
   83 execute_statement: . EXECUTE dynamic_statement using_part opt_into_result
   84                  | . EXECUTE IMMEDIATE quasi_string_const
   87 fetch_statement: . FETCH cursor into_result
   88                | . FETCH OBJECT host_variable_wo_indicator ON_ id_list_ into_result
   89 commit_statement: . COMMIT opt_work
   92 rollback_statement: . ROLLBACK opt_work

    CLOSE       shift, and go to state 26
    COMMIT      shift, and go to state 27
    CONNECT     shift, and go to state 28
    DECLARE     shift, and go to state 29
    DESCRIBE    shift, and go to state 30
    DISCONNECT  shift, and go to state 31
    EXECUTE     shift, and go to state 32
    FETCH       shift, and go to state 33
    INCLUDE     shift, and go to state 34
    OPEN        shift, and go to state 35
    PREPARE     shift, and go to state 36
    ROLLBACK    shift, and go to state 37
    WHENEVER    shift, and go to state 38

    $default  reduce using rule 21 ($@6)

    $@6                       go to state 39
    embedded_statement        go to state 40
    whenever_statement        go to state 41
    connect_statement         go to state 42
    disconnect_statement      go to state 43
    declare_cursor_statement  go to state 44
    open_statement            go to state 45
    close_statement           go to state 46
    describe_statement        go to state 47
    prepare_statement         go to state 48
    execute_statement         go to state 49
    fetch_statement           go to state 50
    commit_statement          go to state 51
    rollback_statement        go to state 52


State 22

   10 embedded_chunk: '{' $@2 opt_embedded_chunk_list $@3 . '}'

    '}'  shift, and go to state 53


State 23

   18 declare_section: BEGIN_ DECLARE . SECTION ';' $@4 declare_section_body $@5 exec sql END DECLARE SECTION

    SECTION  shift, and go to state 54


State 24

   12 chunk_body: declare_section ';' .

    $default  reduce using rule 12 (chunk_body)


State 25

   13 chunk_body: esql_statement ';' .

    $default  reduce using rule 13 (chunk_body)


State 26

   64 close_statement: CLOSE . cursor
   65 cursor: . IDENTIFIER

    IDENTIFIER  shift, and go to state 55

    cursor  go to state 56


State 27

   89 commit_statement: COMMIT . opt_work
   90 opt_work: . %empty  [';']
   91         | . WORK

    WORK  shift, and go to state 57

    $default  reduce using rule 90 (opt_work)

    opt_work  go to state 58


State 28

   49 connect_statement: CONNECT . quasi_string_const opt_id_by_quasi
   75 quasi_string_const: . STRING_LIT
   76                   | . host_variable_wo_indicator
   79 $@9: . %empty  [':']
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    STRING_LIT  shift, and go to state 59

    $default  reduce using rule 79 ($@9)

    quasi_string_const          go to state 60
    host_variable_wo_indicator  go to state 61
    $@9                         go to state 62


State 29

   55 declare_cursor_statement: DECLARE . IDENTIFIER CURSOR_ FOR cursor_query_statement
   56                         | DECLARE . IDENTIFIER CURSOR_ FOR dynamic_statement

    IDENTIFIER  shift, and go to state 63


State 30

   57 dynamic_statement: . IDENTIFIER
   66 describe_statement: DESCRIBE . dynamic_statement INTO descriptor_name
   67                   | DESCRIBE . OBJECT host_variable_wo_indicator ON_ id_list_ INTO descriptor_name

    OBJECT      shift, and go to state 64
    IDENTIFIER  shift, and go to state 65

    dynamic_statement  go to state 66


State 31

   54 disconnect_statement: DISCONNECT .

    $default  reduce using rule 54 (disconnect_statement)


State 32

   57 dynamic_statement: . IDENTIFIER
   83 execute_statement: EXECUTE . dynamic_statement using_part opt_into_result
   84                  | EXECUTE . IMMEDIATE quasi_string_const

    IMMEDIATE   shift, and go to state 67
    IDENTIFIER  shift, and go to state 65

    dynamic_statement  go to state 68


State 33

   65 cursor: . IDENTIFIER
   87 fetch_statement: FETCH . cursor into_result
   88                | FETCH . OBJECT host_variable_wo_indicator ON_ id_list_ into_result

    OBJECT      shift, and go to state 69
    IDENTIFIER  shift, and go to state 55

    cursor  go to state 70


State 34

   34 embedded_statement: INCLUDE . SQLCA
   35                   | INCLUDE . SQLDA

    SQLCA  shift, and go to state 71
    SQLDA  shift, and go to state 72


State 35

   58 open_statement: OPEN . cursor opt_for_read_only using_part
   65 cursor: . IDENTIFIER

    IDENTIFIER  shift, and go to state 55

    cursor  go to state 73


State 36

   57 dynamic_statement: . IDENTIFIER
   68 prepare_statement: PREPARE . dynamic_statement FROM quasi_string_const

    IDENTIFIER  shift, and go to state 65

    dynamic_statement  go to state 74


State 37

   90 opt_work: . %empty  [';']
   91         | . WORK
   92 rollback_statement: ROLLBACK . opt_work

    WORK  shift, and go to state 57

    $default  reduce using rule 90 (opt_work)

    opt_work  go to state 75


State 38

   38 whenever_statement: WHENEVER . whenever_action
   39 of_whenever_state: . SQLWARNING_
   40                  | . SQLERROR_
   41                  | . NOT FOUND
   42 whenever_action: . of_whenever_state CONTINUE_
   43                | . of_whenever_state STOP_
   44                | . of_whenever_state GOTO_ opt_COLON IDENTIFIER
   45                | . of_whenever_state GO TO opt_COLON IDENTIFIER
   46                | . of_whenever_state CALL_ IDENTIFIER

    NOT          shift, and go to state 76
    SQLERROR_    shift, and go to state 77
    SQLWARNING_  shift, and go to state 78

    of_whenever_state  go to state 79
    whenever_action    go to state 80


State 39

   22 esql_statement: opt_repeated $@6 . csql_statement
  115 $@10: . %empty
  117 csql_statement: . $@10 csql_statement_head $@11 csql_statement_tail

    $default  reduce using rule 115 ($@10)

    csql_statement  go to state 81
    $@10            go to state 82


State 40

   19 esql_statement: opt_repeated embedded_statement .

    $default  reduce using rule 19 (esql_statement)


State 41

   25 embedded_statement: whenever_statement .

    $default  reduce using rule 25 (embedded_statement)


State 42

   26 embedded_statement: connect_statement .

    $default  reduce using rule 26 (embedded_statement)


State 43

   27 embedded_statement: disconnect_statement .

    $default  reduce using rule 27 (embedded_statement)


State 44

   20 esql_statement: opt_repeated declare_cursor_statement .

    $default  reduce using rule 20 (esql_statement)


State 45

   28 embedded_statement: open_statement .

    $default  reduce using rule 28 (embedded_statement)


State 46

   29 embedded_statement: close_statement .

    $default  reduce using rule 29 (embedded_statement)


State 47

   30 embedded_statement: describe_statement .

    $default  reduce using rule 30 (embedded_statement)


State 48

   31 embedded_statement: prepare_statement .

    $default  reduce using rule 31 (embedded_statement)


State 49

   32 embedded_statement: execute_statement .

    $default  reduce using rule 32 (embedded_statement)


State 50

   33 embedded_statement: fetch_statement .

    $default  reduce using rule 33 (embedded_statement)


State 51

   36 embedded_statement: commit_statement .

    $default  reduce using rule 36 (embedded_statement)


State 52

   37 embedded_statement: rollback_statement .

    $default  reduce using rule 37 (embedded_statement)


State 53

   10 embedded_chunk: '{' $@2 opt_embedded_chunk_list $@3 '}' .

    $default  reduce using rule 10 (embedded_chunk)


State 54

   18 declare_section: BEGIN_ DECLARE SECTION . ';' $@4 declare_section_body $@5 exec sql END DECLARE SECTION

    ';'  shift, and go to state 83


State 55

   65 cursor: IDENTIFIER .

    $default  reduce using rule 65 (cursor)


State 56

   64 close_statement: CLOSE cursor .

    $default  reduce using rule 64 (close_statement)


State 57

   91 opt_work: WORK .

    $default  reduce using rule 91 (opt_work)


State 58

   89 commit_statement: COMMIT opt_work .

    $default  reduce using rule 89 (commit_statement)


State 59

   75 quasi_string_const: STRING_LIT .

    $default  reduce using rule 75 (quasi_string_const)


State 60

   49 connect_statement: CONNECT quasi_string_const . opt_id_by_quasi
   50 opt_id_by_quasi: . %empty  [';']
   51                | . IDENTIFIED BY quasi_string_const opt_with_quasi

    IDENTIFIED  shift, and go to state 84

    $default  reduce using rule 50 (opt_id_by_quasi)

    opt_id_by_quasi  go to state 85


State 61

   76 quasi_string_const: host_variable_wo_indicator .

    $default  reduce using rule 76 (quasi_string_const)


State 62

   80 host_variable_wo_indicator: $@9 . host_var_w_opt_indicator
  285 $@32: . %empty
  286 host_var_w_opt_indicator: . $@32 host_variable indicator_var

    $default  reduce using rule 285 ($@32)

    host_var_w_opt_indicator  go to state 86
    $@32                      go to state 87


State 63

   55 declare_cursor_statement: DECLARE IDENTIFIER . CURSOR_ FOR cursor_query_statement
   56                         | DECLARE IDENTIFIER . CURSOR_ FOR dynamic_statement

    CURSOR_  shift, and go to state 88


State 64

   67 describe_statement: DESCRIBE OBJECT . host_variable_wo_indicator ON_ id_list_ INTO descriptor_name
   79 $@9: . %empty
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    $default  reduce using rule 79 ($@9)

    host_variable_wo_indicator  go to state 89
    $@9                         go to state 62


State 65

   57 dynamic_statement: IDENTIFIER .

    $default  reduce using rule 57 (dynamic_statement)


State 66

   66 describe_statement: DESCRIBE dynamic_statement . INTO descriptor_name

    INTO  shift, and go to state 90


State 67

   75 quasi_string_const: . STRING_LIT
   76                   | . host_variable_wo_indicator
   79 $@9: . %empty  [':']
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator
   84 execute_statement: EXECUTE IMMEDIATE . quasi_string_const

    STRING_LIT  shift, and go to state 59

    $default  reduce using rule 79 ($@9)

    quasi_string_const          go to state 91
    host_variable_wo_indicator  go to state 61
    $@9                         go to state 62


State 68

   61 using_part: . %empty  [INTO, TO, ';']
   62           | . USING host_variable_lod
   83 execute_statement: EXECUTE dynamic_statement . using_part opt_into_result

    USING  shift, and go to state 92

    $default  reduce using rule 61 (using_part)

    using_part  go to state 93


State 69

   79 $@9: . %empty
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator
   88 fetch_statement: FETCH OBJECT . host_variable_wo_indicator ON_ id_list_ into_result

    $default  reduce using rule 79 ($@9)

    host_variable_wo_indicator  go to state 94
    $@9                         go to state 62


State 70

   70 into_result: . of_into_to $@7 host_variable_lod
   71 of_into_to: . INTO
   72           | . TO
   87 fetch_statement: FETCH cursor . into_result

    INTO  shift, and go to state 95
    TO    shift, and go to state 96

    into_result  go to state 97
    of_into_to   go to state 98


State 71

   34 embedded_statement: INCLUDE SQLCA .

    $default  reduce using rule 34 (embedded_statement)


State 72

   35 embedded_statement: INCLUDE SQLDA .

    $default  reduce using rule 35 (embedded_statement)


State 73

   58 open_statement: OPEN cursor . opt_for_read_only using_part
   59 opt_for_read_only: . %empty  [USING, ';']
   60                  | . FOR READ ONLY

    FOR  shift, and go to state 99

    $default  reduce using rule 59 (opt_for_read_only)

    opt_for_read_only  go to state 100


State 74

   68 prepare_statement: PREPARE dynamic_statement . FROM quasi_string_const

    FROM  shift, and go to state 101


State 75

   92 rollback_statement: ROLLBACK opt_work .

    $default  reduce using rule 92 (rollback_statement)


State 76

   41 of_whenever_state: NOT . FOUND

    FOUND  shift, and go to state 102


State 77

   40 of_whenever_state: SQLERROR_ .

    $default  reduce using rule 40 (of_whenever_state)


State 78

   39 of_whenever_state: SQLWARNING_ .

    $default  reduce using rule 39 (of_whenever_state)


State 79

   42 whenever_action: of_whenever_state . CONTINUE_
   43                | of_whenever_state . STOP_
   44                | of_whenever_state . GOTO_ opt_COLON IDENTIFIER
   45                | of_whenever_state . GO TO opt_COLON IDENTIFIER
   46                | of_whenever_state . CALL_ IDENTIFIER

    CALL_      shift, and go to state 103
    CONTINUE_  shift, and go to state 104
    GO         shift, and go to state 105
    GOTO_      shift, and go to state 106
    STOP_      shift, and go to state 107


State 80

   38 whenever_statement: WHENEVER whenever_action .

    $default  reduce using rule 38 (whenever_statement)


State 81

   22 esql_statement: opt_repeated $@6 csql_statement .

    $default  reduce using rule 22 (esql_statement)


State 82

   93 csql_statement_head: . ALTER
   94                    | . ATTACH
   95                    | . CALL_
   96                    | . CREATE
   97                    | . DROP
   98                    | . END
   99                    | . EVALUATE
  100                    | . EXCLUDE
  101                    | . FOR
  102                    | . GET
  103                    | . GRANT
  104                    | . INSERT
  105                    | . ON_
  106                    | . REGISTER_
  107                    | . RENAME
  108                    | . REVOKE
  109                    | . SELECT
  110                    | . SET
  111                    | . TRIGGER
  112                    | . USE
  113                    | . DELETE_
  114                    | . UPDATE
  117 csql_statement: $@10 . csql_statement_head $@11 csql_statement_tail

    ALTER      shift, and go to state 108
    ATTACH     shift, and go to state 109
    CALL_      shift, and go to state 110
    CREATE     shift, and go to state 111
    DELETE_    shift, and go to state 112
    DROP       shift, and go to state 113
    END        shift, and go to state 114
    EVALUATE   shift, and go to state 115
    EXCLUDE    shift, and go to state 116
    FOR        shift, and go to state 117
    GET        shift, and go to state 118
    GRANT      shift, and go to state 119
    INSERT     shift, and go to state 120
    ON_        shift, and go to state 121
    REGISTER_  shift, and go to state 122
    RENAME     shift, and go to state 123
    REVOKE     shift, and go to state 124
    SELECT     shift, and go to state 125
    SET        shift, and go to state 126
    TRIGGER    shift, and go to state 127
    UPDATE     shift, and go to state 128
    USE        shift, and go to state 129

    csql_statement_head  go to state 130


State 83

   16 $@4: . %empty
   18 declare_section: BEGIN_ DECLARE SECTION ';' . $@4 declare_section_body $@5 exec sql END DECLARE SECTION

    $default  reduce using rule 16 ($@4)

    $@4  go to state 131


State 84

   51 opt_id_by_quasi: IDENTIFIED . BY quasi_string_const opt_with_quasi

    BY  shift, and go to state 132


State 85

   49 connect_statement: CONNECT quasi_string_const opt_id_by_quasi .

    $default  reduce using rule 49 (connect_statement)


State 86

   80 host_variable_wo_indicator: $@9 host_var_w_opt_indicator .

    $default  reduce using rule 80 (host_variable_wo_indicator)


State 87

  286 host_var_w_opt_indicator: $@32 . host_variable indicator_var
  288 host_variable: . ':' $@33 hostvar

    ':'  shift, and go to state 133

    host_variable  go to state 134


State 88

   55 declare_cursor_statement: DECLARE IDENTIFIER CURSOR_ . FOR cursor_query_statement
   56                         | DECLARE IDENTIFIER CURSOR_ . FOR dynamic_statement

    FOR  shift, and go to state 135


State 89

   67 describe_statement: DESCRIBE OBJECT host_variable_wo_indicator . ON_ id_list_ INTO descriptor_name

    ON_  shift, and go to state 136


State 90

   63 descriptor_name: . host_variable_wo_indicator
   66 describe_statement: DESCRIBE dynamic_statement INTO . descriptor_name
   79 $@9: . %empty
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    $default  reduce using rule 79 ($@9)

    descriptor_name             go to state 137
    host_variable_wo_indicator  go to state 138
    $@9                         go to state 62


State 91

   84 execute_statement: EXECUTE IMMEDIATE quasi_string_const .

    $default  reduce using rule 84 (execute_statement)


State 92

   62 using_part: USING . host_variable_lod
   73 host_variable_lod: . host_variable_list
   74                  | . DESCRIPTOR descriptor_name
   77 $@8: . %empty  [':']
   78 host_variable_list: . $@8 host_variable_list_tail

    DESCRIPTOR  shift, and go to state 139

    $default  reduce using rule 77 ($@8)

    host_variable_lod   go to state 140
    host_variable_list  go to state 141
    $@8                 go to state 142


State 93

   70 into_result: . of_into_to $@7 host_variable_lod
   71 of_into_to: . INTO
   72           | . TO
   83 execute_statement: EXECUTE dynamic_statement using_part . opt_into_result
   85 opt_into_result: . %empty  [';']
   86                | . into_result

    INTO  shift, and go to state 95
    TO    shift, and go to state 96

    $default  reduce using rule 85 (opt_into_result)

    into_result      go to state 143
    of_into_to       go to state 98
    opt_into_result  go to state 144


State 94

   88 fetch_statement: FETCH OBJECT host_variable_wo_indicator . ON_ id_list_ into_result

    ON_  shift, and go to state 145


State 95

   71 of_into_to: INTO .

    $default  reduce using rule 71 (of_into_to)


State 96

   72 of_into_to: TO .

    $default  reduce using rule 72 (of_into_to)


State 97

   87 fetch_statement: FETCH cursor into_result .

    $default  reduce using rule 87 (fetch_statement)


State 98

   69 $@7: . %empty
   70 into_result: of_into_to . $@7 host_variable_lod

    $default  reduce using rule 69 ($@7)

    $@7  go to state 146


State 99

   60 opt_for_read_only: FOR . READ ONLY

    READ  shift, and go to state 147


State 100

   58 open_statement: OPEN cursor opt_for_read_only . using_part
   61 using_part: . %empty  [';']
   62           | . USING host_variable_lod

    USING  shift, and go to state 92

    $default  reduce using rule 61 (using_part)

    using_part  go to state 148


State 101

   68 prepare_statement: PREPARE dynamic_statement FROM . quasi_string_const
   75 quasi_string_const: . STRING_LIT
   76                   | . host_variable_wo_indicator
   79 $@9: . %empty  [':']
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    STRING_LIT  shift, and go to state 59

    $default  reduce using rule 79 ($@9)

    quasi_string_const          go to state 149
    host_variable_wo_indicator  go to state 61
    $@9                         go to state 62


State 102

   41 of_whenever_state: NOT FOUND .

    $default  reduce using rule 41 (of_whenever_state)


State 103

   46 whenever_action: of_whenever_state CALL_ . IDENTIFIER

    IDENTIFIER  shift, and go to state 150


State 104

   42 whenever_action: of_whenever_state CONTINUE_ .

    $default  reduce using rule 42 (whenever_action)


State 105

   45 whenever_action: of_whenever_state GO . TO opt_COLON IDENTIFIER

    TO  shift, and go to state 151


State 106

   44 whenever_action: of_whenever_state GOTO_ . opt_COLON IDENTIFIER
   47 opt_COLON: . %empty  [IDENTIFIER]
   48          | . ':'

    ':'  shift, and go to state 152

    $default  reduce using rule 47 (opt_COLON)

    opt_COLON  go to state 153


State 107

   43 whenever_action: of_whenever_state STOP_ .

    $default  reduce using rule 43 (whenever_action)


State 108

   93 csql_statement_head: ALTER .

    $default  reduce using rule 93 (csql_statement_head)


State 109

   94 csql_statement_head: ATTACH .

    $default  reduce using rule 94 (csql_statement_head)


State 110

   95 csql_statement_head: CALL_ .

    $default  reduce using rule 95 (csql_statement_head)


State 111

   96 csql_statement_head: CREATE .

    $default  reduce using rule 96 (csql_statement_head)


State 112

  113 csql_statement_head: DELETE_ .

    $default  reduce using rule 113 (csql_statement_head)


State 113

   97 csql_statement_head: DROP .

    $default  reduce using rule 97 (csql_statement_head)


State 114

   98 csql_statement_head: END .

    $default  reduce using rule 98 (csql_statement_head)


State 115

   99 csql_statement_head: EVALUATE .

    $default  reduce using rule 99 (csql_statement_head)


State 116

  100 csql_statement_head: EXCLUDE .

    $default  reduce using rule 100 (csql_statement_head)


State 117

  101 csql_statement_head: FOR .

    $default  reduce using rule 101 (csql_statement_head)


State 118

  102 csql_statement_head: GET .

    $default  reduce using rule 102 (csql_statement_head)


State 119

  103 csql_statement_head: GRANT .

    $default  reduce using rule 103 (csql_statement_head)


State 120

  104 csql_statement_head: INSERT .

    $default  reduce using rule 104 (csql_statement_head)


State 121

  105 csql_statement_head: ON_ .

    $default  reduce using rule 105 (csql_statement_head)


State 122

  106 csql_statement_head: REGISTER_ .

    $default  reduce using rule 106 (csql_statement_head)


State 123

  107 csql_statement_head: RENAME .

    $default  reduce using rule 107 (csql_statement_head)


State 124

  108 csql_statement_head: REVOKE .

    $default  reduce using rule 108 (csql_statement_head)


State 125

  109 csql_statement_head: SELECT .

    $default  reduce using rule 109 (csql_statement_head)


State 126

  110 csql_statement_head: SET .

    $default  reduce using rule 110 (csql_statement_head)


State 127

  111 csql_statement_head: TRIGGER .

    $default  reduce using rule 111 (csql_statement_head)


State 128

  114 csql_statement_head: UPDATE .

    $default  reduce using rule 114 (csql_statement_head)


State 129

  112 csql_statement_head: USE .

    $default  reduce using rule 112 (csql_statement_head)


State 130

  116 $@11: . %empty
  117 csql_statement: $@10 csql_statement_head . $@11 csql_statement_tail

    $default  reduce using rule 116 ($@11)

    $@11  go to state 154


State 131

   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 . declare_section_body $@5 exec sql END DECLARE SECTION
  118 declare_section_body: . opt_ext_decl_list
  119 opt_ext_decl_list: . %empty  [EXEC]
  120                  | . ext_decl_list
  121 ext_decl_list: . ext_decl_list external_declaration
  122              | . external_declaration
  123 $@12: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME, IDENTIFIER, ';', '(', '*']
  125 external_declaration: . $@12 opt_specifier_list optional_declarators $@13 end_declarator_list

    EXEC      reduce using rule 119 (opt_ext_decl_list)
    $default  reduce using rule 123 ($@12)

    declare_section_body  go to state 155
    opt_ext_decl_list     go to state 156
    ext_decl_list         go to state 157
    external_declaration  go to state 158
    $@12                  go to state 159


State 132

   51 opt_id_by_quasi: IDENTIFIED BY . quasi_string_const opt_with_quasi
   75 quasi_string_const: . STRING_LIT
   76                   | . host_variable_wo_indicator
   79 $@9: . %empty  [':']
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    STRING_LIT  shift, and go to state 59

    $default  reduce using rule 79 ($@9)

    quasi_string_const          go to state 160
    host_variable_wo_indicator  go to state 61
    $@9                         go to state 62


State 133

  287 $@33: . %empty
  288 host_variable: ':' . $@33 hostvar

    $default  reduce using rule 287 ($@33)

    $@33  go to state 161


State 134

  281 indicator_var: . %empty  [DESCRIPTOR, FROM, GENERIC_TOKEN, IDENTIFIED, INTO, ON_, SELECT, TO, VALUES, WITH, IDENTIFIER, '{', '}', ';', ':', ',', '(', ')', '*']
  282              | . '#' hostvar
  283              | . INDICATOR '#' hostvar
  284              | . INDICATOR hostvar
  286 host_var_w_opt_indicator: $@32 host_variable . indicator_var

    INDICATOR  shift, and go to state 162
    '#'        shift, and go to state 163

    $default  reduce using rule 281 (indicator_var)

    indicator_var  go to state 164


State 135

   55 declare_cursor_statement: DECLARE IDENTIFIER CURSOR_ FOR . cursor_query_statement
   56                         | DECLARE IDENTIFIER CURSOR_ FOR . dynamic_statement
   57 dynamic_statement: . IDENTIFIER
  342 $@40: . %empty  [SELECT, '(']
  343 cursor_query_statement: . $@40 of_select_lp opt_buffer_sql_list

    IDENTIFIER  shift, and go to state 65

    $default  reduce using rule 342 ($@40)

    dynamic_statement       go to state 165
    cursor_query_statement  go to state 166
    $@40                    go to state 167


State 136

   67 describe_statement: DESCRIBE OBJECT host_variable_wo_indicator ON_ . id_list_ INTO descriptor_name
   81 id_list_: . id_list_ ',' IDENTIFIER
   82         | . IDENTIFIER

    IDENTIFIER  shift, and go to state 168

    id_list_  go to state 169


State 137

   66 describe_statement: DESCRIBE dynamic_statement INTO descriptor_name .

    $default  reduce using rule 66 (describe_statement)


State 138

   63 descriptor_name: host_variable_wo_indicator .

    $default  reduce using rule 63 (descriptor_name)


State 139

   63 descriptor_name: . host_variable_wo_indicator
   74 host_variable_lod: DESCRIPTOR . descriptor_name
   79 $@9: . %empty
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    $default  reduce using rule 79 ($@9)

    descriptor_name             go to state 170
    host_variable_wo_indicator  go to state 138
    $@9                         go to state 62


State 140

   62 using_part: USING host_variable_lod .

    $default  reduce using rule 62 (using_part)


State 141

   73 host_variable_lod: host_variable_list .

    $default  reduce using rule 73 (host_variable_lod)


State 142

   78 host_variable_list: $@8 . host_variable_list_tail
  279 host_variable_list_tail: . host_variable_list_tail ',' host_var_w_opt_indicator
  280                        | . host_var_w_opt_indicator
  285 $@32: . %empty
  286 host_var_w_opt_indicator: . $@32 host_variable indicator_var

    $default  reduce using rule 285 ($@32)

    host_variable_list_tail   go to state 171
    host_var_w_opt_indicator  go to state 172
    $@32                      go to state 87


State 143

   86 opt_into_result: into_result .

    $default  reduce using rule 86 (opt_into_result)


State 144

   83 execute_statement: EXECUTE dynamic_statement using_part opt_into_result .

    $default  reduce using rule 83 (execute_statement)


State 145

   81 id_list_: . id_list_ ',' IDENTIFIER
   82         | . IDENTIFIER
   88 fetch_statement: FETCH OBJECT host_variable_wo_indicator ON_ . id_list_ into_result

    IDENTIFIER  shift, and go to state 168

    id_list_  go to state 173


State 146

   70 into_result: of_into_to $@7 . host_variable_lod
   73 host_variable_lod: . host_variable_list
   74                  | . DESCRIPTOR descriptor_name
   77 $@8: . %empty  [':']
   78 host_variable_list: . $@8 host_variable_list_tail

    DESCRIPTOR  shift, and go to state 139

    $default  reduce using rule 77 ($@8)

    host_variable_lod   go to state 174
    host_variable_list  go to state 141
    $@8                 go to state 142


State 147

   60 opt_for_read_only: FOR READ . ONLY

    ONLY  shift, and go to state 175


State 148

   58 open_statement: OPEN cursor opt_for_read_only using_part .

    $default  reduce using rule 58 (open_statement)


State 149

   68 prepare_statement: PREPARE dynamic_statement FROM quasi_string_const .

    $default  reduce using rule 68 (prepare_statement)


State 150

   46 whenever_action: of_whenever_state CALL_ IDENTIFIER .

    $default  reduce using rule 46 (whenever_action)


State 151

   45 whenever_action: of_whenever_state GO TO . opt_COLON IDENTIFIER
   47 opt_COLON: . %empty  [IDENTIFIER]
   48          | . ':'

    ':'  shift, and go to state 152

    $default  reduce using rule 47 (opt_COLON)

    opt_COLON  go to state 176


State 152

   48 opt_COLON: ':' .

    $default  reduce using rule 48 (opt_COLON)


State 153

   44 whenever_action: of_whenever_state GOTO_ opt_COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 177


State 154

  117 csql_statement: $@10 csql_statement_head $@11 . csql_statement_tail
  285 $@32: . %empty  [':']
  286 host_var_w_opt_indicator: . $@32 host_variable indicator_var
  319 csql_statement_tail: . opt_buffer_sql_list
  320 opt_buffer_sql_list: . %empty  [';']
  321                    | . buffer_sql_list
  322 buffer_sql_list: . buffer_sql_list buffer_sql
  323                | . buffer_sql
  324 buffer_sql: . host_var_w_opt_indicator
  325           | . DESCRIPTOR host_variable_wo_indicator
  326           | . var_mode_follow_set
  327 var_mode_follow_set: . '*'
  328                    | . ','
  329                    | . '('
  330                    | . ')'
  331                    | . '{'
  332                    | . '}'
  333                    | . GENERIC_TOKEN
  334                    | . IDENTIFIER
  335                    | . INTO
  336                    | . TO
  337                    | . FROM
  338                    | . SELECT
  339                    | . VALUES
  340                    | . ON_
  341                    | . WITH

    DESCRIPTOR     shift, and go to state 178
    FROM           shift, and go to state 179
    GENERIC_TOKEN  shift, and go to state 180
    INTO           shift, and go to state 181
    ON_            shift, and go to state 182
    SELECT         shift, and go to state 183
    TO             shift, and go to state 184
    VALUES         shift, and go to state 185
    WITH           shift, and go to state 186
    IDENTIFIER     shift, and go to state 187
    '{'            shift, and go to state 188
    '}'            shift, and go to state 189
    ','            shift, and go to state 190
    '('            shift, and go to state 191
    ')'            shift, and go to state 192
    '*'            shift, and go to state 193

    ';'       reduce using rule 320 (opt_buffer_sql_list)
    $default  reduce using rule 285 ($@32)

    host_var_w_opt_indicator  go to state 194
    $@32                      go to state 87
    csql_statement_tail       go to state 195
    opt_buffer_sql_list       go to state 196
    buffer_sql_list           go to state 197
    buffer_sql                go to state 198
    var_mode_follow_set       go to state 199


State 155

   17 $@5: . %empty
   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body . $@5 exec sql END DECLARE SECTION

    $default  reduce using rule 17 ($@5)

    $@5  go to state 200


State 156

  118 declare_section_body: opt_ext_decl_list .

    $default  reduce using rule 118 (declare_section_body)


State 157

  120 opt_ext_decl_list: ext_decl_list .  [EXEC]
  121 ext_decl_list: ext_decl_list . external_declaration
  123 $@12: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME, IDENTIFIER, ';', '(', '*']
  125 external_declaration: . $@12 opt_specifier_list optional_declarators $@13 end_declarator_list

    EXEC      reduce using rule 120 (opt_ext_decl_list)
    $default  reduce using rule 123 ($@12)

    external_declaration  go to state 201
    $@12                  go to state 159


State 158

  122 ext_decl_list: external_declaration .

    $default  reduce using rule 122 (ext_decl_list)


State 159

  125 external_declaration: $@12 . opt_specifier_list optional_declarators $@13 end_declarator_list
  126 opt_specifier_list: . %empty  [IDENTIFIER, ';', '(', '*']
  127                   | . specifier_list
  131 specifier_list: . specifier_list specifier_
  132               | . specifier_
  133 specifier_: . storage_class_specifier
  134           | . type_specifier
  135           | . type_qualifier
  136 storage_class_specifier: . TYPEDEF_
  137                        | . EXTERN_
  138                        | . STATIC_
  139                        | . AUTO_
  140                        | . REGISTER_
  141 type_specifier: . nS_ntd base_type_specifier
  142               | . type_adjective
  143               | . struct_specifier
  144               | . enum_specifier
  155 type_adjective: . SHORT_
  156               | . LONG_
  157               | . SIGNED_
  158               | . UNSIGNED_
  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  162 struct_specifier: . nS_ntd of_struct_union $@14 struct_specifier_body
  164                 | . nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body
  188 enum_specifier: . ENUM '{' enumerator_list '}'
  189               | . ENUM identifier optional_enumerator_list
  255 nS_ntd: . %empty  [BIT_, CHAR_, DOUBLE_, FLOAT_, INT_, STRUCT_, UNION_, VARCHAR_, VOID_, TYPEDEF_NAME]

    AUTO_      shift, and go to state 202
    CONST_     shift, and go to state 203
    ENUM       shift, and go to state 204
    EXTERN_    shift, and go to state 205
    LONG_      shift, and go to state 206
    REGISTER_  shift, and go to state 207
    SHORT_     shift, and go to state 208
    SIGNED_    shift, and go to state 209
    STATIC_    shift, and go to state 210
    TYPEDEF_   shift, and go to state 211
    UNSIGNED_  shift, and go to state 212
    VOLATILE_  shift, and go to state 213

    IDENTIFIER  reduce using rule 126 (opt_specifier_list)
    ';'         reduce using rule 126 (opt_specifier_list)
    '('         reduce using rule 126 (opt_specifier_list)
    '*'         reduce using rule 126 (opt_specifier_list)
    $default    reduce using rule 255 (nS_ntd)

    opt_specifier_list       go to state 214
    specifier_list           go to state 215
    specifier_               go to state 216
    storage_class_specifier  go to state 217
    type_specifier           go to state 218
    type_adjective           go to state 219
    type_qualifier           go to state 220
    struct_specifier         go to state 221
    enum_specifier           go to state 222
    nS_ntd                   go to state 223


State 160

   51 opt_id_by_quasi: IDENTIFIED BY quasi_string_const . opt_with_quasi
   52 opt_with_quasi: . %empty  [';']
   53               | . WITH quasi_string_const

    WITH  shift, and go to state 224

    $default  reduce using rule 52 (opt_with_quasi)

    opt_with_quasi  go to state 225


State 161

  288 host_variable: ':' $@33 . hostvar
  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  291        | . '*' VOLATILE_ hostvar
  292        | . '*' hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '&'         shift, and go to state 229

    hostvar   go to state 230
    host_ref  go to state 231


State 162

  283 indicator_var: INDICATOR . '#' hostvar
  284              | INDICATOR . hostvar
  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  291        | . '*' VOLATILE_ hostvar
  292        | . '*' hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '#'         shift, and go to state 232
    '&'         shift, and go to state 229

    hostvar   go to state 233
    host_ref  go to state 231


State 163

  282 indicator_var: '#' . hostvar
  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  291        | . '*' VOLATILE_ hostvar
  292        | . '*' hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '&'         shift, and go to state 229

    hostvar   go to state 234
    host_ref  go to state 231


State 164

  286 host_var_w_opt_indicator: $@32 host_variable indicator_var .

    $default  reduce using rule 286 (host_var_w_opt_indicator)


State 165

   56 declare_cursor_statement: DECLARE IDENTIFIER CURSOR_ FOR dynamic_statement .

    $default  reduce using rule 56 (declare_cursor_statement)


State 166

   55 declare_cursor_statement: DECLARE IDENTIFIER CURSOR_ FOR cursor_query_statement .

    $default  reduce using rule 55 (declare_cursor_statement)


State 167

  343 cursor_query_statement: $@40 . of_select_lp opt_buffer_sql_list
  344 of_select_lp: . SELECT
  345             | . '('

    SELECT  shift, and go to state 235
    '('     shift, and go to state 236

    of_select_lp  go to state 237


State 168

   82 id_list_: IDENTIFIER .

    $default  reduce using rule 82 (id_list_)


State 169

   67 describe_statement: DESCRIBE OBJECT host_variable_wo_indicator ON_ id_list_ . INTO descriptor_name
   81 id_list_: id_list_ . ',' IDENTIFIER

    INTO  shift, and go to state 238
    ','   shift, and go to state 239


State 170

   74 host_variable_lod: DESCRIPTOR descriptor_name .

    $default  reduce using rule 74 (host_variable_lod)


State 171

   78 host_variable_list: $@8 host_variable_list_tail .  [INTO, TO, ';']
  279 host_variable_list_tail: host_variable_list_tail . ',' host_var_w_opt_indicator

    ','  shift, and go to state 240

    $default  reduce using rule 78 (host_variable_list)


State 172

  280 host_variable_list_tail: host_var_w_opt_indicator .

    $default  reduce using rule 280 (host_variable_list_tail)


State 173

   70 into_result: . of_into_to $@7 host_variable_lod
   71 of_into_to: . INTO
   72           | . TO
   81 id_list_: id_list_ . ',' IDENTIFIER
   88 fetch_statement: FETCH OBJECT host_variable_wo_indicator ON_ id_list_ . into_result

    INTO  shift, and go to state 95
    TO    shift, and go to state 96
    ','   shift, and go to state 239

    into_result  go to state 241
    of_into_to   go to state 98


State 174

   70 into_result: of_into_to $@7 host_variable_lod .

    $default  reduce using rule 70 (into_result)


State 175

   60 opt_for_read_only: FOR READ ONLY .

    $default  reduce using rule 60 (opt_for_read_only)


State 176

   45 whenever_action: of_whenever_state GO TO opt_COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 242


State 177

   44 whenever_action: of_whenever_state GOTO_ opt_COLON IDENTIFIER .

    $default  reduce using rule 44 (whenever_action)


State 178

   79 $@9: . %empty
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator
  325 buffer_sql: DESCRIPTOR . host_variable_wo_indicator

    $default  reduce using rule 79 ($@9)

    host_variable_wo_indicator  go to state 243
    $@9                         go to state 62


State 179

  337 var_mode_follow_set: FROM .

    $default  reduce using rule 337 (var_mode_follow_set)


State 180

  333 var_mode_follow_set: GENERIC_TOKEN .

    $default  reduce using rule 333 (var_mode_follow_set)


State 181

  335 var_mode_follow_set: INTO .

    $default  reduce using rule 335 (var_mode_follow_set)


State 182

  340 var_mode_follow_set: ON_ .

    $default  reduce using rule 340 (var_mode_follow_set)


State 183

  338 var_mode_follow_set: SELECT .

    $default  reduce using rule 338 (var_mode_follow_set)


State 184

  336 var_mode_follow_set: TO .

    $default  reduce using rule 336 (var_mode_follow_set)


State 185

  339 var_mode_follow_set: VALUES .

    $default  reduce using rule 339 (var_mode_follow_set)


State 186

  341 var_mode_follow_set: WITH .

    $default  reduce using rule 341 (var_mode_follow_set)


State 187

  334 var_mode_follow_set: IDENTIFIER .

    $default  reduce using rule 334 (var_mode_follow_set)


State 188

  331 var_mode_follow_set: '{' .

    $default  reduce using rule 331 (var_mode_follow_set)


State 189

  332 var_mode_follow_set: '}' .

    $default  reduce using rule 332 (var_mode_follow_set)


State 190

  328 var_mode_follow_set: ',' .

    $default  reduce using rule 328 (var_mode_follow_set)


State 191

  329 var_mode_follow_set: '(' .

    $default  reduce using rule 329 (var_mode_follow_set)


State 192

  330 var_mode_follow_set: ')' .

    $default  reduce using rule 330 (var_mode_follow_set)


State 193

  327 var_mode_follow_set: '*' .

    $default  reduce using rule 327 (var_mode_follow_set)


State 194

  324 buffer_sql: host_var_w_opt_indicator .

    $default  reduce using rule 324 (buffer_sql)


State 195

  117 csql_statement: $@10 csql_statement_head $@11 csql_statement_tail .

    $default  reduce using rule 117 (csql_statement)


State 196

  319 csql_statement_tail: opt_buffer_sql_list .

    $default  reduce using rule 319 (csql_statement_tail)


State 197

  285 $@32: . %empty  [':']
  286 host_var_w_opt_indicator: . $@32 host_variable indicator_var
  321 opt_buffer_sql_list: buffer_sql_list .  [';']
  322 buffer_sql_list: buffer_sql_list . buffer_sql
  324 buffer_sql: . host_var_w_opt_indicator
  325           | . DESCRIPTOR host_variable_wo_indicator
  326           | . var_mode_follow_set
  327 var_mode_follow_set: . '*'
  328                    | . ','
  329                    | . '('
  330                    | . ')'
  331                    | . '{'
  332                    | . '}'
  333                    | . GENERIC_TOKEN
  334                    | . IDENTIFIER
  335                    | . INTO
  336                    | . TO
  337                    | . FROM
  338                    | . SELECT
  339                    | . VALUES
  340                    | . ON_
  341                    | . WITH

    DESCRIPTOR     shift, and go to state 178
    FROM           shift, and go to state 179
    GENERIC_TOKEN  shift, and go to state 180
    INTO           shift, and go to state 181
    ON_            shift, and go to state 182
    SELECT         shift, and go to state 183
    TO             shift, and go to state 184
    VALUES         shift, and go to state 185
    WITH           shift, and go to state 186
    IDENTIFIER     shift, and go to state 187
    '{'            shift, and go to state 188
    '}'            shift, and go to state 189
    ','            shift, and go to state 190
    '('            shift, and go to state 191
    ')'            shift, and go to state 192
    '*'            shift, and go to state 193

    ';'       reduce using rule 321 (opt_buffer_sql_list)
    $default  reduce using rule 285 ($@32)

    host_var_w_opt_indicator  go to state 194
    $@32                      go to state 87
    buffer_sql                go to state 244
    var_mode_follow_set       go to state 199


State 198

  323 buffer_sql_list: buffer_sql .

    $default  reduce using rule 323 (buffer_sql_list)


State 199

  326 buffer_sql: var_mode_follow_set .

    $default  reduce using rule 326 (buffer_sql)


State 200

   14 exec: . EXEC
   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 . exec sql END DECLARE SECTION

    EXEC  shift, and go to state 1

    exec  go to state 245


State 201

  121 ext_decl_list: ext_decl_list external_declaration .

    $default  reduce using rule 121 (ext_decl_list)


State 202

  139 storage_class_specifier: AUTO_ .

    $default  reduce using rule 139 (storage_class_specifier)


State 203

  159 type_qualifier: CONST_ .

    $default  reduce using rule 159 (type_qualifier)


State 204

  188 enum_specifier: ENUM . '{' enumerator_list '}'
  189               | ENUM . identifier optional_enumerator_list
  255 nS_ntd: . %empty  [TYPEDEF_NAME]
  257 identifier: . nS_ntd TYPEDEF_NAME nS_td
  258           | . IDENTIFIER
  259           | . ENUMERATION_CONSTANT

    ENUMERATION_CONSTANT  shift, and go to state 246
    IDENTIFIER            shift, and go to state 247
    '{'                   shift, and go to state 248

    $default  reduce using rule 255 (nS_ntd)

    nS_ntd      go to state 249
    identifier  go to state 250


State 205

  137 storage_class_specifier: EXTERN_ .

    $default  reduce using rule 137 (storage_class_specifier)


State 206

  156 type_adjective: LONG_ .

    $default  reduce using rule 156 (type_adjective)


State 207

  140 storage_class_specifier: REGISTER_ .

    $default  reduce using rule 140 (storage_class_specifier)


State 208

  155 type_adjective: SHORT_ .

    $default  reduce using rule 155 (type_adjective)


State 209

  157 type_adjective: SIGNED_ .

    $default  reduce using rule 157 (type_adjective)


State 210

  138 storage_class_specifier: STATIC_ .

    $default  reduce using rule 138 (storage_class_specifier)


State 211

  136 storage_class_specifier: TYPEDEF_ .

    $default  reduce using rule 136 (storage_class_specifier)


State 212

  158 type_adjective: UNSIGNED_ .

    $default  reduce using rule 158 (type_adjective)


State 213

  160 type_qualifier: VOLATILE_ .

    $default  reduce using rule 160 (type_qualifier)


State 214

  125 external_declaration: $@12 opt_specifier_list . optional_declarators $@13 end_declarator_list
  128 optional_declarators: . %empty  [';']
  129                     | . init_declarator_list
  197 init_declarator_list: . init_declarator_list ',' init_declarator
  198                     | . init_declarator
  199 init_declarator: . declarator_
  201                | . declarator_ nS_td '=' $@23 c_expression nS_ntd
  202 declarator_: . direct_declarator
  203            | . pointer declarator_
  205 direct_declarator: . IDENTIFIER $@24 opt_param_spec_list
  207                  | . '(' declarator_ ')' $@25 opt_param_spec_list
  214 pointer: . '*' opt_type_qualifier_list

    IDENTIFIER  shift, and go to state 251
    '('         shift, and go to state 252
    '*'         shift, and go to state 253

    $default  reduce using rule 128 (optional_declarators)

    optional_declarators  go to state 254
    init_declarator_list  go to state 255
    init_declarator       go to state 256
    declarator_           go to state 257
    direct_declarator     go to state 258
    pointer               go to state 259


State 215

  127 opt_specifier_list: specifier_list .  [IDENTIFIER, ';', '(', '*']
  131 specifier_list: specifier_list . specifier_
  133 specifier_: . storage_class_specifier
  134           | . type_specifier
  135           | . type_qualifier
  136 storage_class_specifier: . TYPEDEF_
  137                        | . EXTERN_
  138                        | . STATIC_
  139                        | . AUTO_
  140                        | . REGISTER_
  141 type_specifier: . nS_ntd base_type_specifier
  142               | . type_adjective
  143               | . struct_specifier
  144               | . enum_specifier
  155 type_adjective: . SHORT_
  156               | . LONG_
  157               | . SIGNED_
  158               | . UNSIGNED_
  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  162 struct_specifier: . nS_ntd of_struct_union $@14 struct_specifier_body
  164                 | . nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body
  188 enum_specifier: . ENUM '{' enumerator_list '}'
  189               | . ENUM identifier optional_enumerator_list
  255 nS_ntd: . %empty  [BIT_, CHAR_, DOUBLE_, FLOAT_, INT_, STRUCT_, UNION_, VARCHAR_, VOID_, TYPEDEF_NAME]

    AUTO_      shift, and go to state 202
    CONST_     shift, and go to state 203
    ENUM       shift, and go to state 204
    EXTERN_    shift, and go to state 205
    LONG_      shift, and go to state 206
    REGISTER_  shift, and go to state 207
    SHORT_     shift, and go to state 208
    SIGNED_    shift, and go to state 209
    STATIC_    shift, and go to state 210
    TYPEDEF_   shift, and go to state 211
    UNSIGNED_  shift, and go to state 212
    VOLATILE_  shift, and go to state 213

    IDENTIFIER  reduce using rule 127 (opt_specifier_list)
    ';'         reduce using rule 127 (opt_specifier_list)
    '('         reduce using rule 127 (opt_specifier_list)
    '*'         reduce using rule 127 (opt_specifier_list)
    $default    reduce using rule 255 (nS_ntd)

    specifier_               go to state 260
    storage_class_specifier  go to state 217
    type_specifier           go to state 218
    type_adjective           go to state 219
    type_qualifier           go to state 220
    struct_specifier         go to state 221
    enum_specifier           go to state 222
    nS_ntd                   go to state 223


State 216

  132 specifier_list: specifier_ .

    $default  reduce using rule 132 (specifier_list)


State 217

  133 specifier_: storage_class_specifier .

    $default  reduce using rule 133 (specifier_)


State 218

  134 specifier_: type_specifier .

    $default  reduce using rule 134 (specifier_)


State 219

  142 type_specifier: type_adjective .

    $default  reduce using rule 142 (type_specifier)


State 220

  135 specifier_: type_qualifier .

    $default  reduce using rule 135 (specifier_)


State 221

  143 type_specifier: struct_specifier .

    $default  reduce using rule 143 (type_specifier)


State 222

  144 type_specifier: enum_specifier .

    $default  reduce using rule 144 (type_specifier)


State 223

  141 type_specifier: nS_ntd . base_type_specifier
  145 base_type_specifier: . VOID_
  146                    | . CHAR_
  147                    | . INT_
  148                    | . FLOAT_
  149                    | . DOUBLE_
  150                    | . TYPEDEF_NAME
  151                    | . VARCHAR_
  152                    | . BIT_ opt_varying
  162 struct_specifier: nS_ntd . of_struct_union $@14 struct_specifier_body
  164                 | nS_ntd . of_struct_union struct_tag $@15 opt_struct_specifier_body
  165 of_struct_union: . STRUCT_
  166                | . UNION_

    BIT_          shift, and go to state 261
    CHAR_         shift, and go to state 262
    DOUBLE_       shift, and go to state 263
    FLOAT_        shift, and go to state 264
    INT_          shift, and go to state 265
    STRUCT_       shift, and go to state 266
    UNION_        shift, and go to state 267
    VARCHAR_      shift, and go to state 268
    VOID_         shift, and go to state 269
    TYPEDEF_NAME  shift, and go to state 270

    base_type_specifier  go to state 271
    of_struct_union      go to state 272


State 224

   53 opt_with_quasi: WITH . quasi_string_const
   75 quasi_string_const: . STRING_LIT
   76                   | . host_variable_wo_indicator
   79 $@9: . %empty  [':']
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    STRING_LIT  shift, and go to state 59

    $default  reduce using rule 79 ($@9)

    quasi_string_const          go to state 273
    host_variable_wo_indicator  go to state 61
    $@9                         go to state 62


State 225

   51 opt_id_by_quasi: IDENTIFIED BY quasi_string_const opt_with_quasi .

    $default  reduce using rule 51 (opt_id_by_quasi)


State 226

  294 $@34: . %empty
  295 host_ref: IDENTIFIER . $@34 opt_host_ref_tail

    $default  reduce using rule 294 ($@34)

    $@34  go to state 274


State 227

  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  291        | . '*' VOLATILE_ hostvar
  292        | . '*' hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail
  297         | '(' . hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '&'         shift, and go to state 229

    hostvar   go to state 275
    host_ref  go to state 231


State 228

  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  290        | '*' . CONST_ hostvar
  291        | . '*' VOLATILE_ hostvar
  291        | '*' . VOLATILE_ hostvar
  292        | . '*' hostvar
  292        | '*' . hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    CONST_      shift, and go to state 276
    VOLATILE_   shift, and go to state 277
    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '&'         shift, and go to state 229

    hostvar   go to state 278
    host_ref  go to state 231


State 229

  293 hostvar: '&' . host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227

    host_ref  go to state 279


State 230

  288 host_variable: ':' $@33 hostvar .

    $default  reduce using rule 288 (host_variable)


State 231

  289 hostvar: host_ref .

    $default  reduce using rule 289 (hostvar)


State 232

  283 indicator_var: INDICATOR '#' . hostvar
  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  291        | . '*' VOLATILE_ hostvar
  292        | . '*' hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '&'         shift, and go to state 229

    hostvar   go to state 280
    host_ref  go to state 231


State 233

  284 indicator_var: INDICATOR hostvar .

    $default  reduce using rule 284 (indicator_var)


State 234

  282 indicator_var: '#' hostvar .

    $default  reduce using rule 282 (indicator_var)


State 235

  344 of_select_lp: SELECT .

    $default  reduce using rule 344 (of_select_lp)


State 236

  345 of_select_lp: '(' .

    $default  reduce using rule 345 (of_select_lp)


State 237

  285 $@32: . %empty  [':']
  286 host_var_w_opt_indicator: . $@32 host_variable indicator_var
  320 opt_buffer_sql_list: . %empty  [';']
  321                    | . buffer_sql_list
  322 buffer_sql_list: . buffer_sql_list buffer_sql
  323                | . buffer_sql
  324 buffer_sql: . host_var_w_opt_indicator
  325           | . DESCRIPTOR host_variable_wo_indicator
  326           | . var_mode_follow_set
  327 var_mode_follow_set: . '*'
  328                    | . ','
  329                    | . '('
  330                    | . ')'
  331                    | . '{'
  332                    | . '}'
  333                    | . GENERIC_TOKEN
  334                    | . IDENTIFIER
  335                    | . INTO
  336                    | . TO
  337                    | . FROM
  338                    | . SELECT
  339                    | . VALUES
  340                    | . ON_
  341                    | . WITH
  343 cursor_query_statement: $@40 of_select_lp . opt_buffer_sql_list

    DESCRIPTOR     shift, and go to state 178
    FROM           shift, and go to state 179
    GENERIC_TOKEN  shift, and go to state 180
    INTO           shift, and go to state 181
    ON_            shift, and go to state 182
    SELECT         shift, and go to state 183
    TO             shift, and go to state 184
    VALUES         shift, and go to state 185
    WITH           shift, and go to state 186
    IDENTIFIER     shift, and go to state 187
    '{'            shift, and go to state 188
    '}'            shift, and go to state 189
    ','            shift, and go to state 190
    '('            shift, and go to state 191
    ')'            shift, and go to state 192
    '*'            shift, and go to state 193

    ';'       reduce using rule 320 (opt_buffer_sql_list)
    $default  reduce using rule 285 ($@32)

    host_var_w_opt_indicator  go to state 194
    $@32                      go to state 87
    opt_buffer_sql_list       go to state 281
    buffer_sql_list           go to state 197
    buffer_sql                go to state 198
    var_mode_follow_set       go to state 199


State 238

   63 descriptor_name: . host_variable_wo_indicator
   67 describe_statement: DESCRIBE OBJECT host_variable_wo_indicator ON_ id_list_ INTO . descriptor_name
   79 $@9: . %empty
   80 host_variable_wo_indicator: . $@9 host_var_w_opt_indicator

    $default  reduce using rule 79 ($@9)

    descriptor_name             go to state 282
    host_variable_wo_indicator  go to state 138
    $@9                         go to state 62


State 239

   81 id_list_: id_list_ ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 283


State 240

  279 host_variable_list_tail: host_variable_list_tail ',' . host_var_w_opt_indicator
  285 $@32: . %empty
  286 host_var_w_opt_indicator: . $@32 host_variable indicator_var

    $default  reduce using rule 285 ($@32)

    host_var_w_opt_indicator  go to state 284
    $@32                      go to state 87


State 241

   88 fetch_statement: FETCH OBJECT host_variable_wo_indicator ON_ id_list_ into_result .

    $default  reduce using rule 88 (fetch_statement)


State 242

   45 whenever_action: of_whenever_state GO TO opt_COLON IDENTIFIER .

    $default  reduce using rule 45 (whenever_action)


State 243

  325 buffer_sql: DESCRIPTOR host_variable_wo_indicator .

    $default  reduce using rule 325 (buffer_sql)


State 244

  322 buffer_sql_list: buffer_sql_list buffer_sql .

    $default  reduce using rule 322 (buffer_sql_list)


State 245

   15 sql: . SQLX
   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 exec . sql END DECLARE SECTION

    SQLX  shift, and go to state 13

    sql  go to state 285


State 246

  259 identifier: ENUMERATION_CONSTANT .

    $default  reduce using rule 259 (identifier)


State 247

  258 identifier: IDENTIFIER .

    $default  reduce using rule 258 (identifier)


State 248

  188 enum_specifier: ENUM '{' . enumerator_list '}'
  192 enumerator_list: . enumerator_list ',' enumerator
  193                | . enumerator
  194 enumerator: . identifier
  196           | . identifier '=' $@22 c_expression
  255 nS_ntd: . %empty  [TYPEDEF_NAME]
  257 identifier: . nS_ntd TYPEDEF_NAME nS_td
  258           | . IDENTIFIER
  259           | . ENUMERATION_CONSTANT

    ENUMERATION_CONSTANT  shift, and go to state 246
    IDENTIFIER            shift, and go to state 247

    $default  reduce using rule 255 (nS_ntd)

    enumerator_list  go to state 286
    enumerator       go to state 287
    nS_ntd           go to state 249
    identifier       go to state 288


State 249

  257 identifier: nS_ntd . TYPEDEF_NAME nS_td

    TYPEDEF_NAME  shift, and go to state 289


State 250

  189 enum_specifier: ENUM identifier . optional_enumerator_list
  190 optional_enumerator_list: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME, IDENTIFIER, ';', ':', ',', '(', ')', '*', '[']
  191                         | . '{' enumerator_list '}'

    '{'  shift, and go to state 290

    $default  reduce using rule 190 (optional_enumerator_list)

    optional_enumerator_list  go to state 291


State 251

  204 $@24: . %empty
  205 direct_declarator: IDENTIFIER . $@24 opt_param_spec_list

    $default  reduce using rule 204 ($@24)

    $@24  go to state 292


State 252

  202 declarator_: . direct_declarator
  203            | . pointer declarator_
  205 direct_declarator: . IDENTIFIER $@24 opt_param_spec_list
  207                  | . '(' declarator_ ')' $@25 opt_param_spec_list
  207                  | '(' . declarator_ ')' $@25 opt_param_spec_list
  214 pointer: . '*' opt_type_qualifier_list

    IDENTIFIER  shift, and go to state 251
    '('         shift, and go to state 252
    '*'         shift, and go to state 253

    declarator_        go to state 293
    direct_declarator  go to state 258
    pointer            go to state 259


State 253

  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  214 pointer: '*' . opt_type_qualifier_list
  215 opt_type_qualifier_list: . %empty  [IDENTIFIER, ',', '(', ')', '*', '[']
  216                        | . type_qualifier_list
  217 type_qualifier_list: . type_qualifier_list type_qualifier
  218                    | . type_qualifier

    CONST_     shift, and go to state 203
    VOLATILE_  shift, and go to state 213

    $default  reduce using rule 215 (opt_type_qualifier_list)

    type_qualifier           go to state 294
    opt_type_qualifier_list  go to state 295
    type_qualifier_list      go to state 296


State 254

  124 $@13: . %empty
  125 external_declaration: $@12 opt_specifier_list optional_declarators . $@13 end_declarator_list

    $default  reduce using rule 124 ($@13)

    $@13  go to state 297


State 255

  129 optional_declarators: init_declarator_list .  [';']
  197 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 298

    $default  reduce using rule 129 (optional_declarators)


State 256

  198 init_declarator_list: init_declarator .

    $default  reduce using rule 198 (init_declarator_list)


State 257

  199 init_declarator: declarator_ .  [';', ',']
  201                | declarator_ . nS_td '=' $@23 c_expression nS_ntd
  256 nS_td: . %empty  ['=']

    '='       reduce using rule 256 (nS_td)
    $default  reduce using rule 199 (init_declarator)

    nS_td  go to state 299


State 258

  202 declarator_: direct_declarator .

    $default  reduce using rule 202 (declarator_)


State 259

  202 declarator_: . direct_declarator
  203            | . pointer declarator_
  203            | pointer . declarator_
  205 direct_declarator: . IDENTIFIER $@24 opt_param_spec_list
  207                  | . '(' declarator_ ')' $@25 opt_param_spec_list
  214 pointer: . '*' opt_type_qualifier_list

    IDENTIFIER  shift, and go to state 251
    '('         shift, and go to state 252
    '*'         shift, and go to state 253

    declarator_        go to state 300
    direct_declarator  go to state 258
    pointer            go to state 259


State 260

  131 specifier_list: specifier_list specifier_ .

    $default  reduce using rule 131 (specifier_list)


State 261

  152 base_type_specifier: BIT_ . opt_varying
  153 opt_varying: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME, IDENTIFIER, ';', ':', ',', '(', ')', '*', '[']
  154            | . VARYING

    VARYING  shift, and go to state 301

    $default  reduce using rule 153 (opt_varying)

    opt_varying  go to state 302


State 262

  146 base_type_specifier: CHAR_ .

    $default  reduce using rule 146 (base_type_specifier)


State 263

  149 base_type_specifier: DOUBLE_ .

    $default  reduce using rule 149 (base_type_specifier)


State 264

  148 base_type_specifier: FLOAT_ .

    $default  reduce using rule 148 (base_type_specifier)


State 265

  147 base_type_specifier: INT_ .

    $default  reduce using rule 147 (base_type_specifier)


State 266

  165 of_struct_union: STRUCT_ .

    $default  reduce using rule 165 (of_struct_union)


State 267

  166 of_struct_union: UNION_ .

    $default  reduce using rule 166 (of_struct_union)


State 268

  151 base_type_specifier: VARCHAR_ .

    $default  reduce using rule 151 (base_type_specifier)


State 269

  145 base_type_specifier: VOID_ .

    $default  reduce using rule 145 (base_type_specifier)


State 270

  150 base_type_specifier: TYPEDEF_NAME .

    $default  reduce using rule 150 (base_type_specifier)


State 271

  141 type_specifier: nS_ntd base_type_specifier .

    $default  reduce using rule 141 (type_specifier)


State 272

  161 $@14: . %empty  ['{']
  162 struct_specifier: nS_ntd of_struct_union . $@14 struct_specifier_body
  164                 | nS_ntd of_struct_union . struct_tag $@15 opt_struct_specifier_body
  172 struct_tag: . IDENTIFIER

    IDENTIFIER  shift, and go to state 303

    $default  reduce using rule 161 ($@14)

    $@14        go to state 304
    struct_tag  go to state 305


State 273

   53 opt_with_quasi: WITH quasi_string_const .

    $default  reduce using rule 53 (opt_with_quasi)


State 274

  295 host_ref: IDENTIFIER $@34 . opt_host_ref_tail
  298 opt_host_ref_tail: . %empty  [DESCRIPTOR, FROM, GENERIC_TOKEN, IDENTIFIED, INDICATOR, INTO, ON_, SELECT, TO, VALUES, WITH, IDENTIFIER, '{', '}', ';', ':', ',', '(', ')', '*', '#']
  299                  | . host_ref_tail
  300 host_ref_tail: . host_ref_tail host_var_subscript
  301              | . host_ref_tail '.' IDENTIFIER
  302              | . host_ref_tail PTR_OP IDENTIFIER
  303              | . host_var_subscript
  304              | . '.' IDENTIFIER
  305              | . PTR_OP IDENTIFIER
  307 host_var_subscript: . '[' $@36 host_var_subscript_body

    PTR_OP  shift, and go to state 306
    '['     shift, and go to state 307
    '.'     shift, and go to state 308

    $default  reduce using rule 298 (opt_host_ref_tail)

    opt_host_ref_tail   go to state 309
    host_ref_tail       go to state 310
    host_var_subscript  go to state 311


State 275

  297 host_ref: '(' hostvar . ')' $@35 opt_host_ref_tail

    ')'  shift, and go to state 312


State 276

  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  290        | '*' CONST_ . hostvar
  291        | . '*' VOLATILE_ hostvar
  292        | . '*' hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '&'         shift, and go to state 229

    hostvar   go to state 313
    host_ref  go to state 231


State 277

  289 hostvar: . host_ref
  290        | . '*' CONST_ hostvar
  291        | . '*' VOLATILE_ hostvar
  291        | '*' VOLATILE_ . hostvar
  292        | . '*' hostvar
  293        | . '&' host_ref
  295 host_ref: . IDENTIFIER $@34 opt_host_ref_tail
  297         | . '(' hostvar ')' $@35 opt_host_ref_tail

    IDENTIFIER  shift, and go to state 226
    '('         shift, and go to state 227
    '*'         shift, and go to state 228
    '&'         shift, and go to state 229

    hostvar   go to state 314
    host_ref  go to state 231


State 278

  292 hostvar: '*' hostvar .

    $default  reduce using rule 292 (hostvar)


State 279

  293 hostvar: '&' host_ref .

    $default  reduce using rule 293 (hostvar)


State 280

  283 indicator_var: INDICATOR '#' hostvar .

    $default  reduce using rule 283 (indicator_var)


State 281

  343 cursor_query_statement: $@40 of_select_lp opt_buffer_sql_list .

    $default  reduce using rule 343 (cursor_query_statement)


State 282

   67 describe_statement: DESCRIBE OBJECT host_variable_wo_indicator ON_ id_list_ INTO descriptor_name .

    $default  reduce using rule 67 (describe_statement)


State 283

   81 id_list_: id_list_ ',' IDENTIFIER .

    $default  reduce using rule 81 (id_list_)


State 284

  279 host_variable_list_tail: host_variable_list_tail ',' host_var_w_opt_indicator .

    $default  reduce using rule 279 (host_variable_list_tail)


State 285

   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 exec sql . END DECLARE SECTION

    END  shift, and go to state 315


State 286

  188 enum_specifier: ENUM '{' enumerator_list . '}'
  192 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 316
    ','  shift, and go to state 317


State 287

  193 enumerator_list: enumerator .

    $default  reduce using rule 193 (enumerator_list)


State 288

  194 enumerator: identifier .  ['}', ',']
  196           | identifier . '=' $@22 c_expression

    '='  shift, and go to state 318

    $default  reduce using rule 194 (enumerator)


State 289

  256 nS_td: . %empty
  257 identifier: nS_ntd TYPEDEF_NAME . nS_td

    $default  reduce using rule 256 (nS_td)

    nS_td  go to state 319


State 290

  191 optional_enumerator_list: '{' . enumerator_list '}'
  192 enumerator_list: . enumerator_list ',' enumerator
  193                | . enumerator
  194 enumerator: . identifier
  196           | . identifier '=' $@22 c_expression
  255 nS_ntd: . %empty  [TYPEDEF_NAME]
  257 identifier: . nS_ntd TYPEDEF_NAME nS_td
  258           | . IDENTIFIER
  259           | . ENUMERATION_CONSTANT

    ENUMERATION_CONSTANT  shift, and go to state 246
    IDENTIFIER            shift, and go to state 247

    $default  reduce using rule 255 (nS_ntd)

    enumerator_list  go to state 320
    enumerator       go to state 287
    nS_ntd           go to state 249
    identifier       go to state 288


State 291

  189 enum_specifier: ENUM identifier optional_enumerator_list .

    $default  reduce using rule 189 (enum_specifier)


State 292

  205 direct_declarator: IDENTIFIER $@24 . opt_param_spec_list
  208 opt_param_spec_list: . %empty  [';', ':', ',', '=', ')']
  209                    | . param_spec_list
  210 param_spec_list: . param_spec_list param_spec
  211                | . param_spec_list c_subscript
  212                | . param_spec
  213                | . c_subscript
  219 param_spec: . '(' ')'
  220           | . '(' push_name_scope param_type_list pop_name_scope ')'
  221           | . '(' push_name_scope id_list_ pop_name_scope ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 321
    '['  shift, and go to state 322

    $default  reduce using rule 208 (opt_param_spec_list)

    opt_param_spec_list  go to state 323
    param_spec_list      go to state 324
    param_spec           go to state 325
    c_subscript          go to state 326


State 293

  207 direct_declarator: '(' declarator_ . ')' $@25 opt_param_spec_list

    ')'  shift, and go to state 327


State 294

  218 type_qualifier_list: type_qualifier .

    $default  reduce using rule 218 (type_qualifier_list)


State 295

  214 pointer: '*' opt_type_qualifier_list .

    $default  reduce using rule 214 (pointer)


State 296

  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  216 opt_type_qualifier_list: type_qualifier_list .  [IDENTIFIER, ',', '(', ')', '*', '[']
  217 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_     shift, and go to state 203
    VOLATILE_  shift, and go to state 213

    $default  reduce using rule 216 (opt_type_qualifier_list)

    type_qualifier  go to state 328


State 297

  125 external_declaration: $@12 opt_specifier_list optional_declarators $@13 . end_declarator_list
  130 end_declarator_list: . nS_td ';'
  256 nS_td: . %empty

    $default  reduce using rule 256 (nS_td)

    end_declarator_list  go to state 329
    nS_td                go to state 330


State 298

  197 init_declarator_list: init_declarator_list ',' . init_declarator
  199 init_declarator: . declarator_
  201                | . declarator_ nS_td '=' $@23 c_expression nS_ntd
  202 declarator_: . direct_declarator
  203            | . pointer declarator_
  205 direct_declarator: . IDENTIFIER $@24 opt_param_spec_list
  207                  | . '(' declarator_ ')' $@25 opt_param_spec_list
  214 pointer: . '*' opt_type_qualifier_list

    IDENTIFIER  shift, and go to state 251
    '('         shift, and go to state 252
    '*'         shift, and go to state 253

    init_declarator    go to state 331
    declarator_        go to state 257
    direct_declarator  go to state 258
    pointer            go to state 259


State 299

  201 init_declarator: declarator_ nS_td . '=' $@23 c_expression nS_ntd

    '='  shift, and go to state 332


State 300

  203 declarator_: pointer declarator_ .

    $default  reduce using rule 203 (declarator_)


State 301

  154 opt_varying: VARYING .

    $default  reduce using rule 154 (opt_varying)


State 302

  152 base_type_specifier: BIT_ opt_varying .

    $default  reduce using rule 152 (base_type_specifier)


State 303

  172 struct_tag: IDENTIFIER .

    $default  reduce using rule 172 (struct_tag)


State 304

  162 struct_specifier: nS_ntd of_struct_union $@14 . struct_specifier_body
  171 struct_specifier_body: . nS_td '{' $@16 struct_declaration_list $@17 '}'
  256 nS_td: . %empty

    $default  reduce using rule 256 (nS_td)

    struct_specifier_body  go to state 333
    nS_td                  go to state 334


State 305

  163 $@15: . %empty
  164 struct_specifier: nS_ntd of_struct_union struct_tag . $@15 opt_struct_specifier_body

    $default  reduce using rule 163 ($@15)

    $@15  go to state 335


State 306

  305 host_ref_tail: PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 336


State 307

  306 $@36: . %empty
  307 host_var_subscript: '[' . $@36 host_var_subscript_body

    $default  reduce using rule 306 ($@36)

    $@36  go to state 337


State 308

  304 host_ref_tail: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 338


State 309

  295 host_ref: IDENTIFIER $@34 opt_host_ref_tail .

    $default  reduce using rule 295 (host_ref)


State 310

  299 opt_host_ref_tail: host_ref_tail .  [DESCRIPTOR, FROM, GENERIC_TOKEN, IDENTIFIED, INDICATOR, INTO, ON_, SELECT, TO, VALUES, WITH, IDENTIFIER, '{', '}', ';', ':', ',', '(', ')', '*', '#']
  300 host_ref_tail: host_ref_tail . host_var_subscript
  301              | host_ref_tail . '.' IDENTIFIER
  302              | host_ref_tail . PTR_OP IDENTIFIER
  307 host_var_subscript: . '[' $@36 host_var_subscript_body

    PTR_OP  shift, and go to state 339
    '['     shift, and go to state 307
    '.'     shift, and go to state 340

    $default  reduce using rule 299 (opt_host_ref_tail)

    host_var_subscript  go to state 341


State 311

  303 host_ref_tail: host_var_subscript .

    $default  reduce using rule 303 (host_ref_tail)


State 312

  296 $@35: . %empty
  297 host_ref: '(' hostvar ')' . $@35 opt_host_ref_tail

    $default  reduce using rule 296 ($@35)

    $@35  go to state 342


State 313

  290 hostvar: '*' CONST_ hostvar .

    $default  reduce using rule 290 (hostvar)


State 314

  291 hostvar: '*' VOLATILE_ hostvar .

    $default  reduce using rule 291 (hostvar)


State 315

   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 exec sql END . DECLARE SECTION

    DECLARE  shift, and go to state 343


State 316

  188 enum_specifier: ENUM '{' enumerator_list '}' .

    $default  reduce using rule 188 (enum_specifier)


State 317

  192 enumerator_list: enumerator_list ',' . enumerator
  194 enumerator: . identifier
  196           | . identifier '=' $@22 c_expression
  255 nS_ntd: . %empty  [TYPEDEF_NAME]
  257 identifier: . nS_ntd TYPEDEF_NAME nS_td
  258           | . IDENTIFIER
  259           | . ENUMERATION_CONSTANT

    ENUMERATION_CONSTANT  shift, and go to state 246
    IDENTIFIER            shift, and go to state 247

    $default  reduce using rule 255 (nS_ntd)

    enumerator  go to state 344
    nS_ntd      go to state 249
    identifier  go to state 288


State 318

  195 $@22: . %empty
  196 enumerator: identifier '=' . $@22 c_expression

    $default  reduce using rule 195 ($@22)

    $@22  go to state 345


State 319

  257 identifier: nS_ntd TYPEDEF_NAME nS_td .

    $default  reduce using rule 257 (identifier)


State 320

  191 optional_enumerator_list: '{' enumerator_list . '}'
  192 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 346
    ','  shift, and go to state 317


State 321

  219 param_spec: '(' . ')'
  220           | '(' . push_name_scope param_type_list pop_name_scope ')'
  221           | '(' . push_name_scope id_list_ pop_name_scope ')'
  222 push_name_scope: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME, IDENTIFIER]

    ')'  shift, and go to state 347

    $default  reduce using rule 222 (push_name_scope)

    push_name_scope  go to state 348


State 322

  260 $@31: . %empty
  261 c_subscript: '[' . $@31 c_subscript_body ']'

    $default  reduce using rule 260 ($@31)

    $@31  go to state 349


State 323

  205 direct_declarator: IDENTIFIER $@24 opt_param_spec_list .

    $default  reduce using rule 205 (direct_declarator)


State 324

  209 opt_param_spec_list: param_spec_list .  [';', ':', ',', '=', ')']
  210 param_spec_list: param_spec_list . param_spec
  211                | param_spec_list . c_subscript
  219 param_spec: . '(' ')'
  220           | . '(' push_name_scope param_type_list pop_name_scope ')'
  221           | . '(' push_name_scope id_list_ pop_name_scope ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 321
    '['  shift, and go to state 322

    $default  reduce using rule 209 (opt_param_spec_list)

    param_spec   go to state 350
    c_subscript  go to state 351


State 325

  212 param_spec_list: param_spec .

    $default  reduce using rule 212 (param_spec_list)


State 326

  213 param_spec_list: c_subscript .

    $default  reduce using rule 213 (param_spec_list)


State 327

  206 $@25: . %empty
  207 direct_declarator: '(' declarator_ ')' . $@25 opt_param_spec_list

    $default  reduce using rule 206 ($@25)

    $@25  go to state 352


State 328

  217 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 217 (type_qualifier_list)


State 329

  125 external_declaration: $@12 opt_specifier_list optional_declarators $@13 end_declarator_list .

    $default  reduce using rule 125 (external_declaration)


State 330

  130 end_declarator_list: nS_td . ';'

    ';'  shift, and go to state 353


State 331

  197 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 197 (init_declarator_list)


State 332

  200 $@23: . %empty
  201 init_declarator: declarator_ nS_td '=' . $@23 c_expression nS_ntd

    $default  reduce using rule 200 ($@23)

    $@23  go to state 354


State 333

  162 struct_specifier: nS_ntd of_struct_union $@14 struct_specifier_body .

    $default  reduce using rule 162 (struct_specifier)


State 334

  171 struct_specifier_body: nS_td . '{' $@16 struct_declaration_list $@17 '}'

    '{'  shift, and go to state 355


State 335

  164 struct_specifier: nS_ntd of_struct_union struct_tag $@15 . opt_struct_specifier_body
  167 opt_struct_specifier_body: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME, IDENTIFIER, ';', ':', ',', '(', ')', '*', '[']
  168                          | . struct_specifier_body
  171 struct_specifier_body: . nS_td '{' $@16 struct_declaration_list $@17 '}'
  256 nS_td: . %empty  ['{']

    '{'       reduce using rule 256 (nS_td)
    $default  reduce using rule 167 (opt_struct_specifier_body)

    opt_struct_specifier_body  go to state 356
    struct_specifier_body      go to state 357
    nS_td                      go to state 334


State 336

  305 host_ref_tail: PTR_OP IDENTIFIER .

    $default  reduce using rule 305 (host_ref_tail)


State 337

  307 host_var_subscript: '[' $@36 . host_var_subscript_body
  308 host_var_subscript_body: . opt_hv_sub_list ']'
  310 hv_sub: . '(' $@37 opt_hv_sub_list ')'
  312       | . '[' $@38 opt_hv_sub_list ']'
  314       | . '{' $@39 opt_hv_sub_list '}'
  315 opt_hv_sub_list: . %empty  [']']
  316                | . hv_sub_list
  317 hv_sub_list: . hv_sub_list hv_sub
  318            | . hv_sub

    '{'  shift, and go to state 358
    '('  shift, and go to state 359
    '['  shift, and go to state 360

    $default  reduce using rule 315 (opt_hv_sub_list)

    host_var_subscript_body  go to state 361
    hv_sub                   go to state 362
    opt_hv_sub_list          go to state 363
    hv_sub_list              go to state 364


State 338

  304 host_ref_tail: '.' IDENTIFIER .

    $default  reduce using rule 304 (host_ref_tail)


State 339

  302 host_ref_tail: host_ref_tail PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 365


State 340

  301 host_ref_tail: host_ref_tail '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 366


State 341

  300 host_ref_tail: host_ref_tail host_var_subscript .

    $default  reduce using rule 300 (host_ref_tail)


State 342

  297 host_ref: '(' hostvar ')' $@35 . opt_host_ref_tail
  298 opt_host_ref_tail: . %empty  [DESCRIPTOR, FROM, GENERIC_TOKEN, IDENTIFIED, INDICATOR, INTO, ON_, SELECT, TO, VALUES, WITH, IDENTIFIER, '{', '}', ';', ':', ',', '(', ')', '*', '#']
  299                  | . host_ref_tail
  300 host_ref_tail: . host_ref_tail host_var_subscript
  301              | . host_ref_tail '.' IDENTIFIER
  302              | . host_ref_tail PTR_OP IDENTIFIER
  303              | . host_var_subscript
  304              | . '.' IDENTIFIER
  305              | . PTR_OP IDENTIFIER
  307 host_var_subscript: . '[' $@36 host_var_subscript_body

    PTR_OP  shift, and go to state 306
    '['     shift, and go to state 307
    '.'     shift, and go to state 308

    $default  reduce using rule 298 (opt_host_ref_tail)

    opt_host_ref_tail   go to state 367
    host_ref_tail       go to state 310
    host_var_subscript  go to state 311


State 343

   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 exec sql END DECLARE . SECTION

    SECTION  shift, and go to state 368


State 344

  192 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 192 (enumerator_list)


State 345

  196 enumerator: identifier '=' $@22 . c_expression
  264 c_expression: . c_expr
  265 c_expr: . any_list
  266 any_list: . any_list any
  267         | . any
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    c_expression  go to state 373
    c_expr        go to state 374
    any_list      go to state 375
    any           go to state 376


State 346

  191 optional_enumerator_list: '{' enumerator_list '}' .

    $default  reduce using rule 191 (optional_enumerator_list)


State 347

  219 param_spec: '(' ')' .

    $default  reduce using rule 219 (param_spec)


State 348

   81 id_list_: . id_list_ ',' IDENTIFIER
   82         | . IDENTIFIER
  220 param_spec: '(' push_name_scope . param_type_list pop_name_scope ')'
  221           | '(' push_name_scope . id_list_ pop_name_scope ')'
  224 push_spec_scope: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME]
  226 param_type_list: . push_spec_scope parameter_list pop_spec_scope

    IDENTIFIER  shift, and go to state 168

    $default  reduce using rule 224 (push_spec_scope)

    id_list_         go to state 377
    push_spec_scope  go to state 378
    param_type_list  go to state 379


State 349

  261 c_subscript: '[' $@31 . c_subscript_body ']'
  262 c_subscript_body: . %empty  [']']
  263                 | . c_expr
  265 c_expr: . any_list
  266 any_list: . any_list any
  267         | . any
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    $default  reduce using rule 262 (c_subscript_body)

    c_subscript_body  go to state 380
    c_expr            go to state 381
    any_list          go to state 375
    any               go to state 376


State 350

  210 param_spec_list: param_spec_list param_spec .

    $default  reduce using rule 210 (param_spec_list)


State 351

  211 param_spec_list: param_spec_list c_subscript .

    $default  reduce using rule 211 (param_spec_list)


State 352

  207 direct_declarator: '(' declarator_ ')' $@25 . opt_param_spec_list
  208 opt_param_spec_list: . %empty  [';', ':', ',', '=', ')']
  209                    | . param_spec_list
  210 param_spec_list: . param_spec_list param_spec
  211                | . param_spec_list c_subscript
  212                | . param_spec
  213                | . c_subscript
  219 param_spec: . '(' ')'
  220           | . '(' push_name_scope param_type_list pop_name_scope ')'
  221           | . '(' push_name_scope id_list_ pop_name_scope ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 321
    '['  shift, and go to state 322

    $default  reduce using rule 208 (opt_param_spec_list)

    opt_param_spec_list  go to state 382
    param_spec_list      go to state 324
    param_spec           go to state 325
    c_subscript          go to state 326


State 353

  130 end_declarator_list: nS_td ';' .

    $default  reduce using rule 130 (end_declarator_list)


State 354

  201 init_declarator: declarator_ nS_td '=' $@23 . c_expression nS_ntd
  264 c_expression: . c_expr
  265 c_expr: . any_list
  266 any_list: . any_list any
  267         | . any
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    c_expression  go to state 383
    c_expr        go to state 374
    any_list      go to state 375
    any           go to state 376


State 355

  169 $@16: . %empty
  171 struct_specifier_body: nS_td '{' . $@16 struct_declaration_list $@17 '}'

    $default  reduce using rule 169 ($@16)

    $@16  go to state 384


State 356

  164 struct_specifier: nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body .

    $default  reduce using rule 164 (struct_specifier)


State 357

  168 opt_struct_specifier_body: struct_specifier_body .

    $default  reduce using rule 168 (opt_struct_specifier_body)


State 358

  313 $@39: . %empty
  314 hv_sub: '{' . $@39 opt_hv_sub_list '}'

    $default  reduce using rule 313 ($@39)

    $@39  go to state 385


State 359

  309 $@37: . %empty
  310 hv_sub: '(' . $@37 opt_hv_sub_list ')'

    $default  reduce using rule 309 ($@37)

    $@37  go to state 386


State 360

  311 $@38: . %empty
  312 hv_sub: '[' . $@38 opt_hv_sub_list ']'

    $default  reduce using rule 311 ($@38)

    $@38  go to state 387


State 361

  307 host_var_subscript: '[' $@36 host_var_subscript_body .

    $default  reduce using rule 307 (host_var_subscript)


State 362

  318 hv_sub_list: hv_sub .

    $default  reduce using rule 318 (hv_sub_list)


State 363

  308 host_var_subscript_body: opt_hv_sub_list . ']'

    ']'  shift, and go to state 388


State 364

  310 hv_sub: . '(' $@37 opt_hv_sub_list ')'
  312       | . '[' $@38 opt_hv_sub_list ']'
  314       | . '{' $@39 opt_hv_sub_list '}'
  316 opt_hv_sub_list: hv_sub_list .  ['}', ')', ']']
  317 hv_sub_list: hv_sub_list . hv_sub

    '{'  shift, and go to state 358
    '('  shift, and go to state 359
    '['  shift, and go to state 360

    $default  reduce using rule 316 (opt_hv_sub_list)

    hv_sub  go to state 389


State 365

  302 host_ref_tail: host_ref_tail PTR_OP IDENTIFIER .

    $default  reduce using rule 302 (host_ref_tail)


State 366

  301 host_ref_tail: host_ref_tail '.' IDENTIFIER .

    $default  reduce using rule 301 (host_ref_tail)


State 367

  297 host_ref: '(' hostvar ')' $@35 opt_host_ref_tail .

    $default  reduce using rule 297 (host_ref)


State 368

   18 declare_section: BEGIN_ DECLARE SECTION ';' $@4 declare_section_body $@5 exec sql END DECLARE SECTION .

    $default  reduce using rule 18 (declare_section)


State 369

  275 any: GENERIC_TOKEN .

    $default  reduce using rule 275 (any)


State 370

  268 any_expr: . %empty  ['}']
  269         | . acs_list
  270 acs_list: . acs_list of_any_comma_semi
  271         | . of_any_comma_semi
  272 of_any_comma_semi: . any
  273                  | . ','
  274                  | . ';'
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'
  278    | '{' . any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    ';'            shift, and go to state 390
    ','            shift, and go to state 391
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    $default  reduce using rule 268 (any_expr)

    any_expr           go to state 392
    acs_list           go to state 393
    of_any_comma_semi  go to state 394
    any                go to state 395


State 371

  268 any_expr: . %empty  [')']
  269         | . acs_list
  270 acs_list: . acs_list of_any_comma_semi
  271         | . of_any_comma_semi
  272 of_any_comma_semi: . any
  273                  | . ','
  274                  | . ';'
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  276    | '(' . any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    ';'            shift, and go to state 390
    ','            shift, and go to state 391
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    $default  reduce using rule 268 (any_expr)

    any_expr           go to state 396
    acs_list           go to state 393
    of_any_comma_semi  go to state 394
    any                go to state 395


State 372

  268 any_expr: . %empty  [']']
  269         | . acs_list
  270 acs_list: . acs_list of_any_comma_semi
  271         | . of_any_comma_semi
  272 of_any_comma_semi: . any
  273                  | . ','
  274                  | . ';'
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  277    | '[' . any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    ';'            shift, and go to state 390
    ','            shift, and go to state 391
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    $default  reduce using rule 268 (any_expr)

    any_expr           go to state 397
    acs_list           go to state 393
    of_any_comma_semi  go to state 394
    any                go to state 395


State 373

  196 enumerator: identifier '=' $@22 c_expression .

    $default  reduce using rule 196 (enumerator)


State 374

  264 c_expression: c_expr .

    $default  reduce using rule 264 (c_expression)


State 375

  265 c_expr: any_list .  ['}', ';', ',', ']']
  266 any_list: any_list . any
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    $default  reduce using rule 265 (c_expr)

    any  go to state 398


State 376

  267 any_list: any .

    $default  reduce using rule 267 (any_list)


State 377

   81 id_list_: id_list_ . ',' IDENTIFIER
  221 param_spec: '(' push_name_scope id_list_ . pop_name_scope ')'
  223 pop_name_scope: . %empty  [')']

    ','  shift, and go to state 239

    $default  reduce using rule 223 (pop_name_scope)

    pop_name_scope  go to state 399


State 378

  226 param_type_list: push_spec_scope . parameter_list pop_spec_scope
  227 parameter_list: . parameter_declaration trailing_params
  228               | . parameter_declaration
  233 $@26: . %empty
  234 parameter_declaration: . $@26 specifier_list opt_abstract_declarator nS_td

    $default  reduce using rule 233 ($@26)

    parameter_list         go to state 400
    parameter_declaration  go to state 401
    $@26                   go to state 402


State 379

  220 param_spec: '(' push_name_scope param_type_list . pop_name_scope ')'
  223 pop_name_scope: . %empty

    $default  reduce using rule 223 (pop_name_scope)

    pop_name_scope  go to state 403


State 380

  261 c_subscript: '[' $@31 c_subscript_body . ']'

    ']'  shift, and go to state 404


State 381

  263 c_subscript_body: c_expr .

    $default  reduce using rule 263 (c_subscript_body)


State 382

  207 direct_declarator: '(' declarator_ ')' $@25 opt_param_spec_list .

    $default  reduce using rule 207 (direct_declarator)


State 383

  201 init_declarator: declarator_ nS_td '=' $@23 c_expression . nS_ntd
  255 nS_ntd: . %empty

    $default  reduce using rule 255 (nS_ntd)

    nS_ntd  go to state 405


State 384

  171 struct_specifier_body: nS_td '{' $@16 . struct_declaration_list $@17 '}'
  173 struct_declaration_list: . struct_declaration_list struct_declaration
  174                        | . struct_declaration
  176 struct_declaration: . specifier_qualifier_list optional_struct_declarator_list $@18 end_declarator_list
  177 $@19: . %empty
  178 specifier_qualifier_list: . $@19 specifier_list

    $default  reduce using rule 177 ($@19)

    struct_declaration_list   go to state 406
    struct_declaration        go to state 407
    specifier_qualifier_list  go to state 408
    $@19                      go to state 409


State 385

  310 hv_sub: . '(' $@37 opt_hv_sub_list ')'
  312       | . '[' $@38 opt_hv_sub_list ']'
  314       | . '{' $@39 opt_hv_sub_list '}'
  314       | '{' $@39 . opt_hv_sub_list '}'
  315 opt_hv_sub_list: . %empty  ['}']
  316                | . hv_sub_list
  317 hv_sub_list: . hv_sub_list hv_sub
  318            | . hv_sub

    '{'  shift, and go to state 358
    '('  shift, and go to state 359
    '['  shift, and go to state 360

    $default  reduce using rule 315 (opt_hv_sub_list)

    hv_sub           go to state 362
    opt_hv_sub_list  go to state 410
    hv_sub_list      go to state 364


State 386

  310 hv_sub: . '(' $@37 opt_hv_sub_list ')'
  310       | '(' $@37 . opt_hv_sub_list ')'
  312       | . '[' $@38 opt_hv_sub_list ']'
  314       | . '{' $@39 opt_hv_sub_list '}'
  315 opt_hv_sub_list: . %empty  [')']
  316                | . hv_sub_list
  317 hv_sub_list: . hv_sub_list hv_sub
  318            | . hv_sub

    '{'  shift, and go to state 358
    '('  shift, and go to state 359
    '['  shift, and go to state 360

    $default  reduce using rule 315 (opt_hv_sub_list)

    hv_sub           go to state 362
    opt_hv_sub_list  go to state 411
    hv_sub_list      go to state 364


State 387

  310 hv_sub: . '(' $@37 opt_hv_sub_list ')'
  312       | . '[' $@38 opt_hv_sub_list ']'
  312       | '[' $@38 . opt_hv_sub_list ']'
  314       | . '{' $@39 opt_hv_sub_list '}'
  315 opt_hv_sub_list: . %empty  [']']
  316                | . hv_sub_list
  317 hv_sub_list: . hv_sub_list hv_sub
  318            | . hv_sub

    '{'  shift, and go to state 358
    '('  shift, and go to state 359
    '['  shift, and go to state 360

    $default  reduce using rule 315 (opt_hv_sub_list)

    hv_sub           go to state 362
    opt_hv_sub_list  go to state 412
    hv_sub_list      go to state 364


State 388

  308 host_var_subscript_body: opt_hv_sub_list ']' .

    $default  reduce using rule 308 (host_var_subscript_body)


State 389

  317 hv_sub_list: hv_sub_list hv_sub .

    $default  reduce using rule 317 (hv_sub_list)


State 390

  274 of_any_comma_semi: ';' .

    $default  reduce using rule 274 (of_any_comma_semi)


State 391

  273 of_any_comma_semi: ',' .

    $default  reduce using rule 273 (of_any_comma_semi)


State 392

  278 any: '{' any_expr . '}'

    '}'  shift, and go to state 413


State 393

  269 any_expr: acs_list .  ['}', ')', ']']
  270 acs_list: acs_list . of_any_comma_semi
  272 of_any_comma_semi: . any
  273                  | . ','
  274                  | . ';'
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    ';'            shift, and go to state 390
    ','            shift, and go to state 391
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    $default  reduce using rule 269 (any_expr)

    of_any_comma_semi  go to state 414
    any                go to state 395


State 394

  271 acs_list: of_any_comma_semi .

    $default  reduce using rule 271 (acs_list)


State 395

  272 of_any_comma_semi: any .

    $default  reduce using rule 272 (of_any_comma_semi)


State 396

  276 any: '(' any_expr . ')'

    ')'  shift, and go to state 415


State 397

  277 any: '[' any_expr . ']'

    ']'  shift, and go to state 416


State 398

  266 any_list: any_list any .

    $default  reduce using rule 266 (any_list)


State 399

  221 param_spec: '(' push_name_scope id_list_ pop_name_scope . ')'

    ')'  shift, and go to state 417


State 400

  225 pop_spec_scope: . %empty
  226 param_type_list: push_spec_scope parameter_list . pop_spec_scope

    $default  reduce using rule 225 (pop_spec_scope)

    pop_spec_scope  go to state 418


State 401

  227 parameter_list: parameter_declaration . trailing_params
  228               | parameter_declaration .  [')']
  229 trailing_params: . param_decl_tail_list
  230                | . ',' ELLIPSIS
  231 param_decl_tail_list: . param_decl_tail_list ',' parameter_declaration
  232                     | . ',' parameter_declaration

    ','  shift, and go to state 419

    $default  reduce using rule 228 (parameter_list)

    trailing_params       go to state 420
    param_decl_tail_list  go to state 421


State 402

  131 specifier_list: . specifier_list specifier_
  132               | . specifier_
  133 specifier_: . storage_class_specifier
  134           | . type_specifier
  135           | . type_qualifier
  136 storage_class_specifier: . TYPEDEF_
  137                        | . EXTERN_
  138                        | . STATIC_
  139                        | . AUTO_
  140                        | . REGISTER_
  141 type_specifier: . nS_ntd base_type_specifier
  142               | . type_adjective
  143               | . struct_specifier
  144               | . enum_specifier
  155 type_adjective: . SHORT_
  156               | . LONG_
  157               | . SIGNED_
  158               | . UNSIGNED_
  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  162 struct_specifier: . nS_ntd of_struct_union $@14 struct_specifier_body
  164                 | . nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body
  188 enum_specifier: . ENUM '{' enumerator_list '}'
  189               | . ENUM identifier optional_enumerator_list
  234 parameter_declaration: $@26 . specifier_list opt_abstract_declarator nS_td
  255 nS_ntd: . %empty  [BIT_, CHAR_, DOUBLE_, FLOAT_, INT_, STRUCT_, UNION_, VARCHAR_, VOID_, TYPEDEF_NAME]

    AUTO_      shift, and go to state 202
    CONST_     shift, and go to state 203
    ENUM       shift, and go to state 204
    EXTERN_    shift, and go to state 205
    LONG_      shift, and go to state 206
    REGISTER_  shift, and go to state 207
    SHORT_     shift, and go to state 208
    SIGNED_    shift, and go to state 209
    STATIC_    shift, and go to state 210
    TYPEDEF_   shift, and go to state 211
    UNSIGNED_  shift, and go to state 212
    VOLATILE_  shift, and go to state 213

    $default  reduce using rule 255 (nS_ntd)

    specifier_list           go to state 422
    specifier_               go to state 216
    storage_class_specifier  go to state 217
    type_specifier           go to state 218
    type_adjective           go to state 219
    type_qualifier           go to state 220
    struct_specifier         go to state 221
    enum_specifier           go to state 222
    nS_ntd                   go to state 223


State 403

  220 param_spec: '(' push_name_scope param_type_list pop_name_scope . ')'

    ')'  shift, and go to state 423


State 404

  261 c_subscript: '[' $@31 c_subscript_body ']' .

    $default  reduce using rule 261 (c_subscript)


State 405

  201 init_declarator: declarator_ nS_td '=' $@23 c_expression nS_ntd .

    $default  reduce using rule 201 (init_declarator)


State 406

  170 $@17: . %empty  ['}']
  171 struct_specifier_body: nS_td '{' $@16 struct_declaration_list . $@17 '}'
  173 struct_declaration_list: struct_declaration_list . struct_declaration
  176 struct_declaration: . specifier_qualifier_list optional_struct_declarator_list $@18 end_declarator_list
  177 $@19: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME]
  178 specifier_qualifier_list: . $@19 specifier_list

    '}'       reduce using rule 170 ($@17)
    $default  reduce using rule 177 ($@19)

    $@17                      go to state 424
    struct_declaration        go to state 425
    specifier_qualifier_list  go to state 408
    $@19                      go to state 409


State 407

  174 struct_declaration_list: struct_declaration .

    $default  reduce using rule 174 (struct_declaration_list)


State 408

  176 struct_declaration: specifier_qualifier_list . optional_struct_declarator_list $@18 end_declarator_list
  179 optional_struct_declarator_list: . %empty  [';']
  180                                | . struct_declarator_list
  181 struct_declarator_list: . struct_declarator_list ',' struct_declarator
  182                       | . struct_declarator
  184 struct_declarator: . ':' $@20 c_expression
  186                  | . declarator_ ':' $@21 c_expression
  187                  | . declarator_
  202 declarator_: . direct_declarator
  203            | . pointer declarator_
  205 direct_declarator: . IDENTIFIER $@24 opt_param_spec_list
  207                  | . '(' declarator_ ')' $@25 opt_param_spec_list
  214 pointer: . '*' opt_type_qualifier_list

    IDENTIFIER  shift, and go to state 251
    ':'         shift, and go to state 426
    '('         shift, and go to state 252
    '*'         shift, and go to state 253

    $default  reduce using rule 179 (optional_struct_declarator_list)

    optional_struct_declarator_list  go to state 427
    struct_declarator_list           go to state 428
    struct_declarator                go to state 429
    declarator_                      go to state 430
    direct_declarator                go to state 258
    pointer                          go to state 259


State 409

  131 specifier_list: . specifier_list specifier_
  132               | . specifier_
  133 specifier_: . storage_class_specifier
  134           | . type_specifier
  135           | . type_qualifier
  136 storage_class_specifier: . TYPEDEF_
  137                        | . EXTERN_
  138                        | . STATIC_
  139                        | . AUTO_
  140                        | . REGISTER_
  141 type_specifier: . nS_ntd base_type_specifier
  142               | . type_adjective
  143               | . struct_specifier
  144               | . enum_specifier
  155 type_adjective: . SHORT_
  156               | . LONG_
  157               | . SIGNED_
  158               | . UNSIGNED_
  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  162 struct_specifier: . nS_ntd of_struct_union $@14 struct_specifier_body
  164                 | . nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body
  178 specifier_qualifier_list: $@19 . specifier_list
  188 enum_specifier: . ENUM '{' enumerator_list '}'
  189               | . ENUM identifier optional_enumerator_list
  255 nS_ntd: . %empty  [BIT_, CHAR_, DOUBLE_, FLOAT_, INT_, STRUCT_, UNION_, VARCHAR_, VOID_, TYPEDEF_NAME]

    AUTO_      shift, and go to state 202
    CONST_     shift, and go to state 203
    ENUM       shift, and go to state 204
    EXTERN_    shift, and go to state 205
    LONG_      shift, and go to state 206
    REGISTER_  shift, and go to state 207
    SHORT_     shift, and go to state 208
    SIGNED_    shift, and go to state 209
    STATIC_    shift, and go to state 210
    TYPEDEF_   shift, and go to state 211
    UNSIGNED_  shift, and go to state 212
    VOLATILE_  shift, and go to state 213

    $default  reduce using rule 255 (nS_ntd)

    specifier_list           go to state 431
    specifier_               go to state 216
    storage_class_specifier  go to state 217
    type_specifier           go to state 218
    type_adjective           go to state 219
    type_qualifier           go to state 220
    struct_specifier         go to state 221
    enum_specifier           go to state 222
    nS_ntd                   go to state 223


State 410

  314 hv_sub: '{' $@39 opt_hv_sub_list . '}'

    '}'  shift, and go to state 432


State 411

  310 hv_sub: '(' $@37 opt_hv_sub_list . ')'

    ')'  shift, and go to state 433


State 412

  312 hv_sub: '[' $@38 opt_hv_sub_list . ']'

    ']'  shift, and go to state 434


State 413

  278 any: '{' any_expr '}' .

    $default  reduce using rule 278 (any)


State 414

  270 acs_list: acs_list of_any_comma_semi .

    $default  reduce using rule 270 (acs_list)


State 415

  276 any: '(' any_expr ')' .

    $default  reduce using rule 276 (any)


State 416

  277 any: '[' any_expr ']' .

    $default  reduce using rule 277 (any)


State 417

  221 param_spec: '(' push_name_scope id_list_ pop_name_scope ')' .

    $default  reduce using rule 221 (param_spec)


State 418

  226 param_type_list: push_spec_scope parameter_list pop_spec_scope .

    $default  reduce using rule 226 (param_type_list)


State 419

  230 trailing_params: ',' . ELLIPSIS
  232 param_decl_tail_list: ',' . parameter_declaration
  233 $@26: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME]
  234 parameter_declaration: . $@26 specifier_list opt_abstract_declarator nS_td

    ELLIPSIS  shift, and go to state 435

    $default  reduce using rule 233 ($@26)

    parameter_declaration  go to state 436
    $@26                   go to state 402


State 420

  227 parameter_list: parameter_declaration trailing_params .

    $default  reduce using rule 227 (parameter_list)


State 421

  229 trailing_params: param_decl_tail_list .  [')']
  231 param_decl_tail_list: param_decl_tail_list . ',' parameter_declaration

    ','  shift, and go to state 437

    $default  reduce using rule 229 (trailing_params)


State 422

  131 specifier_list: specifier_list . specifier_
  133 specifier_: . storage_class_specifier
  134           | . type_specifier
  135           | . type_qualifier
  136 storage_class_specifier: . TYPEDEF_
  137                        | . EXTERN_
  138                        | . STATIC_
  139                        | . AUTO_
  140                        | . REGISTER_
  141 type_specifier: . nS_ntd base_type_specifier
  142               | . type_adjective
  143               | . struct_specifier
  144               | . enum_specifier
  155 type_adjective: . SHORT_
  156               | . LONG_
  157               | . SIGNED_
  158               | . UNSIGNED_
  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  162 struct_specifier: . nS_ntd of_struct_union $@14 struct_specifier_body
  164                 | . nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body
  188 enum_specifier: . ENUM '{' enumerator_list '}'
  189               | . ENUM identifier optional_enumerator_list
  214 pointer: . '*' opt_type_qualifier_list
  234 parameter_declaration: $@26 specifier_list . opt_abstract_declarator nS_td
  235 opt_abstract_declarator: . %empty  [',', ')']
  236                        | . abstract_declarator
  237 abstract_declarator: . pointer opt_abstract_declarator
  238                    | . direct_abstract_declarator
  240 direct_abstract_declarator: . '(' abstract_declarator ')' $@27 opt_direct_adecl_tail
  242                           | . '(' opt_param_type_list ')' $@28 opt_direct_adecl_tail
  244                           | . IDENTIFIER $@29 opt_direct_adecl_tail
  246                           | . c_subscript $@30 opt_direct_adecl_tail
  255 nS_ntd: . %empty  [BIT_, CHAR_, DOUBLE_, FLOAT_, INT_, STRUCT_, UNION_, VARCHAR_, VOID_, TYPEDEF_NAME]
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    AUTO_       shift, and go to state 202
    CONST_      shift, and go to state 203
    ENUM        shift, and go to state 204
    EXTERN_     shift, and go to state 205
    LONG_       shift, and go to state 206
    REGISTER_   shift, and go to state 207
    SHORT_      shift, and go to state 208
    SIGNED_     shift, and go to state 209
    STATIC_     shift, and go to state 210
    TYPEDEF_    shift, and go to state 211
    UNSIGNED_   shift, and go to state 212
    VOLATILE_   shift, and go to state 213
    IDENTIFIER  shift, and go to state 438
    '('         shift, and go to state 439
    '*'         shift, and go to state 253
    '['         shift, and go to state 322

    ','       reduce using rule 235 (opt_abstract_declarator)
    ')'       reduce using rule 235 (opt_abstract_declarator)
    $default  reduce using rule 255 (nS_ntd)

    specifier_                  go to state 260
    storage_class_specifier     go to state 217
    type_specifier              go to state 218
    type_adjective              go to state 219
    type_qualifier              go to state 220
    struct_specifier            go to state 221
    enum_specifier              go to state 222
    pointer                     go to state 440
    opt_abstract_declarator     go to state 441
    abstract_declarator         go to state 442
    direct_abstract_declarator  go to state 443
    nS_ntd                      go to state 223
    c_subscript                 go to state 444


State 423

  220 param_spec: '(' push_name_scope param_type_list pop_name_scope ')' .

    $default  reduce using rule 220 (param_spec)


State 424

  171 struct_specifier_body: nS_td '{' $@16 struct_declaration_list $@17 . '}'

    '}'  shift, and go to state 445


State 425

  173 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 173 (struct_declaration_list)


State 426

  183 $@20: . %empty
  184 struct_declarator: ':' . $@20 c_expression

    $default  reduce using rule 183 ($@20)

    $@20  go to state 446


State 427

  175 $@18: . %empty
  176 struct_declaration: specifier_qualifier_list optional_struct_declarator_list . $@18 end_declarator_list

    $default  reduce using rule 175 ($@18)

    $@18  go to state 447


State 428

  180 optional_struct_declarator_list: struct_declarator_list .  [';']
  181 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 448

    $default  reduce using rule 180 (optional_struct_declarator_list)


State 429

  182 struct_declarator_list: struct_declarator .

    $default  reduce using rule 182 (struct_declarator_list)


State 430

  186 struct_declarator: declarator_ . ':' $@21 c_expression
  187                  | declarator_ .  [';', ',']

    ':'  shift, and go to state 449

    $default  reduce using rule 187 (struct_declarator)


State 431

  131 specifier_list: specifier_list . specifier_
  133 specifier_: . storage_class_specifier
  134           | . type_specifier
  135           | . type_qualifier
  136 storage_class_specifier: . TYPEDEF_
  137                        | . EXTERN_
  138                        | . STATIC_
  139                        | . AUTO_
  140                        | . REGISTER_
  141 type_specifier: . nS_ntd base_type_specifier
  142               | . type_adjective
  143               | . struct_specifier
  144               | . enum_specifier
  155 type_adjective: . SHORT_
  156               | . LONG_
  157               | . SIGNED_
  158               | . UNSIGNED_
  159 type_qualifier: . CONST_
  160               | . VOLATILE_
  162 struct_specifier: . nS_ntd of_struct_union $@14 struct_specifier_body
  164                 | . nS_ntd of_struct_union struct_tag $@15 opt_struct_specifier_body
  178 specifier_qualifier_list: $@19 specifier_list .  [IDENTIFIER, ';', ':', '(', '*']
  188 enum_specifier: . ENUM '{' enumerator_list '}'
  189               | . ENUM identifier optional_enumerator_list
  255 nS_ntd: . %empty  [BIT_, CHAR_, DOUBLE_, FLOAT_, INT_, STRUCT_, UNION_, VARCHAR_, VOID_, TYPEDEF_NAME]

    AUTO_      shift, and go to state 202
    CONST_     shift, and go to state 203
    ENUM       shift, and go to state 204
    EXTERN_    shift, and go to state 205
    LONG_      shift, and go to state 206
    REGISTER_  shift, and go to state 207
    SHORT_     shift, and go to state 208
    SIGNED_    shift, and go to state 209
    STATIC_    shift, and go to state 210
    TYPEDEF_   shift, and go to state 211
    UNSIGNED_  shift, and go to state 212
    VOLATILE_  shift, and go to state 213

    IDENTIFIER  reduce using rule 178 (specifier_qualifier_list)
    ';'         reduce using rule 178 (specifier_qualifier_list)
    ':'         reduce using rule 178 (specifier_qualifier_list)
    '('         reduce using rule 178 (specifier_qualifier_list)
    '*'         reduce using rule 178 (specifier_qualifier_list)
    $default    reduce using rule 255 (nS_ntd)

    specifier_               go to state 260
    storage_class_specifier  go to state 217
    type_specifier           go to state 218
    type_adjective           go to state 219
    type_qualifier           go to state 220
    struct_specifier         go to state 221
    enum_specifier           go to state 222
    nS_ntd                   go to state 223


State 432

  314 hv_sub: '{' $@39 opt_hv_sub_list '}' .

    $default  reduce using rule 314 (hv_sub)


State 433

  310 hv_sub: '(' $@37 opt_hv_sub_list ')' .

    $default  reduce using rule 310 (hv_sub)


State 434

  312 hv_sub: '[' $@38 opt_hv_sub_list ']' .

    $default  reduce using rule 312 (hv_sub)


State 435

  230 trailing_params: ',' ELLIPSIS .

    $default  reduce using rule 230 (trailing_params)


State 436

  232 param_decl_tail_list: ',' parameter_declaration .

    $default  reduce using rule 232 (param_decl_tail_list)


State 437

  231 param_decl_tail_list: param_decl_tail_list ',' . parameter_declaration
  233 $@26: . %empty
  234 parameter_declaration: . $@26 specifier_list opt_abstract_declarator nS_td

    $default  reduce using rule 233 ($@26)

    parameter_declaration  go to state 450
    $@26                   go to state 402


State 438

  243 $@29: . %empty
  244 direct_abstract_declarator: IDENTIFIER . $@29 opt_direct_adecl_tail

    $default  reduce using rule 243 ($@29)

    $@29  go to state 451


State 439

  214 pointer: . '*' opt_type_qualifier_list
  224 push_spec_scope: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME]
  226 param_type_list: . push_spec_scope parameter_list pop_spec_scope
  237 abstract_declarator: . pointer opt_abstract_declarator
  238                    | . direct_abstract_declarator
  240 direct_abstract_declarator: . '(' abstract_declarator ')' $@27 opt_direct_adecl_tail
  240                           | '(' . abstract_declarator ')' $@27 opt_direct_adecl_tail
  242                           | . '(' opt_param_type_list ')' $@28 opt_direct_adecl_tail
  242                           | '(' . opt_param_type_list ')' $@28 opt_direct_adecl_tail
  244                           | . IDENTIFIER $@29 opt_direct_adecl_tail
  246                           | . c_subscript $@30 opt_direct_adecl_tail
  253 opt_param_type_list: . %empty  [')']
  254                    | . param_type_list
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    IDENTIFIER  shift, and go to state 438
    '('         shift, and go to state 439
    '*'         shift, and go to state 253
    '['         shift, and go to state 322

    ')'       reduce using rule 253 (opt_param_type_list)
    $default  reduce using rule 224 (push_spec_scope)

    pointer                     go to state 440
    push_spec_scope             go to state 378
    param_type_list             go to state 452
    abstract_declarator         go to state 453
    direct_abstract_declarator  go to state 443
    opt_param_type_list         go to state 454
    c_subscript                 go to state 444


State 440

  214 pointer: . '*' opt_type_qualifier_list
  235 opt_abstract_declarator: . %empty  [',', ')']
  236                        | . abstract_declarator
  237 abstract_declarator: . pointer opt_abstract_declarator
  237                    | pointer . opt_abstract_declarator
  238                    | . direct_abstract_declarator
  240 direct_abstract_declarator: . '(' abstract_declarator ')' $@27 opt_direct_adecl_tail
  242                           | . '(' opt_param_type_list ')' $@28 opt_direct_adecl_tail
  244                           | . IDENTIFIER $@29 opt_direct_adecl_tail
  246                           | . c_subscript $@30 opt_direct_adecl_tail
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    IDENTIFIER  shift, and go to state 438
    '('         shift, and go to state 439
    '*'         shift, and go to state 253
    '['         shift, and go to state 322

    $default  reduce using rule 235 (opt_abstract_declarator)

    pointer                     go to state 440
    opt_abstract_declarator     go to state 455
    abstract_declarator         go to state 442
    direct_abstract_declarator  go to state 443
    c_subscript                 go to state 444


State 441

  234 parameter_declaration: $@26 specifier_list opt_abstract_declarator . nS_td
  256 nS_td: . %empty

    $default  reduce using rule 256 (nS_td)

    nS_td  go to state 456


State 442

  236 opt_abstract_declarator: abstract_declarator .

    $default  reduce using rule 236 (opt_abstract_declarator)


State 443

  238 abstract_declarator: direct_abstract_declarator .

    $default  reduce using rule 238 (abstract_declarator)


State 444

  245 $@30: . %empty
  246 direct_abstract_declarator: c_subscript . $@30 opt_direct_adecl_tail

    $default  reduce using rule 245 ($@30)

    $@30  go to state 457


State 445

  171 struct_specifier_body: nS_td '{' $@16 struct_declaration_list $@17 '}' .

    $default  reduce using rule 171 (struct_specifier_body)


State 446

  184 struct_declarator: ':' $@20 . c_expression
  264 c_expression: . c_expr
  265 c_expr: . any_list
  266 any_list: . any_list any
  267         | . any
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    c_expression  go to state 458
    c_expr        go to state 374
    any_list      go to state 375
    any           go to state 376


State 447

  130 end_declarator_list: . nS_td ';'
  176 struct_declaration: specifier_qualifier_list optional_struct_declarator_list $@18 . end_declarator_list
  256 nS_td: . %empty

    $default  reduce using rule 256 (nS_td)

    end_declarator_list  go to state 459
    nS_td                go to state 330


State 448

  181 struct_declarator_list: struct_declarator_list ',' . struct_declarator
  184 struct_declarator: . ':' $@20 c_expression
  186                  | . declarator_ ':' $@21 c_expression
  187                  | . declarator_
  202 declarator_: . direct_declarator
  203            | . pointer declarator_
  205 direct_declarator: . IDENTIFIER $@24 opt_param_spec_list
  207                  | . '(' declarator_ ')' $@25 opt_param_spec_list
  214 pointer: . '*' opt_type_qualifier_list

    IDENTIFIER  shift, and go to state 251
    ':'         shift, and go to state 426
    '('         shift, and go to state 252
    '*'         shift, and go to state 253

    struct_declarator  go to state 460
    declarator_        go to state 430
    direct_declarator  go to state 258
    pointer            go to state 259


State 449

  185 $@21: . %empty
  186 struct_declarator: declarator_ ':' . $@21 c_expression

    $default  reduce using rule 185 ($@21)

    $@21  go to state 461


State 450

  231 param_decl_tail_list: param_decl_tail_list ',' parameter_declaration .

    $default  reduce using rule 231 (param_decl_tail_list)


State 451

  244 direct_abstract_declarator: IDENTIFIER $@29 . opt_direct_adecl_tail
  247 opt_direct_adecl_tail: . %empty  [',', ')']
  248                      | . direct_adecl_tail
  249 direct_adecl_tail: . direct_adecl_tail c_subscript
  250                  | . direct_adecl_tail '(' opt_param_type_list ')'
  251                  | . c_subscript
  252                  | . '(' opt_param_type_list ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 462
    '['  shift, and go to state 322

    $default  reduce using rule 247 (opt_direct_adecl_tail)

    opt_direct_adecl_tail  go to state 463
    direct_adecl_tail      go to state 464
    c_subscript            go to state 465


State 452

  254 opt_param_type_list: param_type_list .

    $default  reduce using rule 254 (opt_param_type_list)


State 453

  240 direct_abstract_declarator: '(' abstract_declarator . ')' $@27 opt_direct_adecl_tail

    ')'  shift, and go to state 466


State 454

  242 direct_abstract_declarator: '(' opt_param_type_list . ')' $@28 opt_direct_adecl_tail

    ')'  shift, and go to state 467


State 455

  237 abstract_declarator: pointer opt_abstract_declarator .

    $default  reduce using rule 237 (abstract_declarator)


State 456

  234 parameter_declaration: $@26 specifier_list opt_abstract_declarator nS_td .

    $default  reduce using rule 234 (parameter_declaration)


State 457

  246 direct_abstract_declarator: c_subscript $@30 . opt_direct_adecl_tail
  247 opt_direct_adecl_tail: . %empty  [',', ')']
  248                      | . direct_adecl_tail
  249 direct_adecl_tail: . direct_adecl_tail c_subscript
  250                  | . direct_adecl_tail '(' opt_param_type_list ')'
  251                  | . c_subscript
  252                  | . '(' opt_param_type_list ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 462
    '['  shift, and go to state 322

    $default  reduce using rule 247 (opt_direct_adecl_tail)

    opt_direct_adecl_tail  go to state 468
    direct_adecl_tail      go to state 464
    c_subscript            go to state 465


State 458

  184 struct_declarator: ':' $@20 c_expression .

    $default  reduce using rule 184 (struct_declarator)


State 459

  176 struct_declaration: specifier_qualifier_list optional_struct_declarator_list $@18 end_declarator_list .

    $default  reduce using rule 176 (struct_declaration)


State 460

  181 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 181 (struct_declarator_list)


State 461

  186 struct_declarator: declarator_ ':' $@21 . c_expression
  264 c_expression: . c_expr
  265 c_expr: . any_list
  266 any_list: . any_list any
  267         | . any
  275 any: . GENERIC_TOKEN
  276    | . '(' any_expr ')'
  277    | . '[' any_expr ']'
  278    | . '{' any_expr '}'

    GENERIC_TOKEN  shift, and go to state 369
    '{'            shift, and go to state 370
    '('            shift, and go to state 371
    '['            shift, and go to state 372

    c_expression  go to state 469
    c_expr        go to state 374
    any_list      go to state 375
    any           go to state 376


State 462

  224 push_spec_scope: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME]
  226 param_type_list: . push_spec_scope parameter_list pop_spec_scope
  252 direct_adecl_tail: '(' . opt_param_type_list ')'
  253 opt_param_type_list: . %empty  [')']
  254                    | . param_type_list

    ')'       reduce using rule 253 (opt_param_type_list)
    $default  reduce using rule 224 (push_spec_scope)

    push_spec_scope      go to state 378
    param_type_list      go to state 452
    opt_param_type_list  go to state 470


State 463

  244 direct_abstract_declarator: IDENTIFIER $@29 opt_direct_adecl_tail .

    $default  reduce using rule 244 (direct_abstract_declarator)


State 464

  248 opt_direct_adecl_tail: direct_adecl_tail .  [',', ')']
  249 direct_adecl_tail: direct_adecl_tail . c_subscript
  250                  | direct_adecl_tail . '(' opt_param_type_list ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 471
    '['  shift, and go to state 322

    $default  reduce using rule 248 (opt_direct_adecl_tail)

    c_subscript  go to state 472


State 465

  251 direct_adecl_tail: c_subscript .

    $default  reduce using rule 251 (direct_adecl_tail)


State 466

  239 $@27: . %empty
  240 direct_abstract_declarator: '(' abstract_declarator ')' . $@27 opt_direct_adecl_tail

    $default  reduce using rule 239 ($@27)

    $@27  go to state 473


State 467

  241 $@28: . %empty
  242 direct_abstract_declarator: '(' opt_param_type_list ')' . $@28 opt_direct_adecl_tail

    $default  reduce using rule 241 ($@28)

    $@28  go to state 474


State 468

  246 direct_abstract_declarator: c_subscript $@30 opt_direct_adecl_tail .

    $default  reduce using rule 246 (direct_abstract_declarator)


State 469

  186 struct_declarator: declarator_ ':' $@21 c_expression .

    $default  reduce using rule 186 (struct_declarator)


State 470

  252 direct_adecl_tail: '(' opt_param_type_list . ')'

    ')'  shift, and go to state 475


State 471

  224 push_spec_scope: . %empty  [AUTO_, BIT_, CHAR_, CONST_, DOUBLE_, ENUM, EXTERN_, FLOAT_, INT_, LONG_, REGISTER_, SHORT_, SIGNED_, STATIC_, STRUCT_, TYPEDEF_, UNION_, UNSIGNED_, VARCHAR_, VOID_, VOLATILE_, TYPEDEF_NAME]
  226 param_type_list: . push_spec_scope parameter_list pop_spec_scope
  250 direct_adecl_tail: direct_adecl_tail '(' . opt_param_type_list ')'
  253 opt_param_type_list: . %empty  [')']
  254                    | . param_type_list

    ')'       reduce using rule 253 (opt_param_type_list)
    $default  reduce using rule 224 (push_spec_scope)

    push_spec_scope      go to state 378
    param_type_list      go to state 452
    opt_param_type_list  go to state 476


State 472

  249 direct_adecl_tail: direct_adecl_tail c_subscript .

    $default  reduce using rule 249 (direct_adecl_tail)


State 473

  240 direct_abstract_declarator: '(' abstract_declarator ')' $@27 . opt_direct_adecl_tail
  247 opt_direct_adecl_tail: . %empty  [',', ')']
  248                      | . direct_adecl_tail
  249 direct_adecl_tail: . direct_adecl_tail c_subscript
  250                  | . direct_adecl_tail '(' opt_param_type_list ')'
  251                  | . c_subscript
  252                  | . '(' opt_param_type_list ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 462
    '['  shift, and go to state 322

    $default  reduce using rule 247 (opt_direct_adecl_tail)

    opt_direct_adecl_tail  go to state 477
    direct_adecl_tail      go to state 464
    c_subscript            go to state 465


State 474

  242 direct_abstract_declarator: '(' opt_param_type_list ')' $@28 . opt_direct_adecl_tail
  247 opt_direct_adecl_tail: . %empty  [',', ')']
  248                      | . direct_adecl_tail
  249 direct_adecl_tail: . direct_adecl_tail c_subscript
  250                  | . direct_adecl_tail '(' opt_param_type_list ')'
  251                  | . c_subscript
  252                  | . '(' opt_param_type_list ')'
  261 c_subscript: . '[' $@31 c_subscript_body ']'

    '('  shift, and go to state 462
    '['  shift, and go to state 322

    $default  reduce using rule 247 (opt_direct_adecl_tail)

    opt_direct_adecl_tail  go to state 478
    direct_adecl_tail      go to state 464
    c_subscript            go to state 465


State 475

  252 direct_adecl_tail: '(' opt_param_type_list ')' .

    $default  reduce using rule 252 (direct_adecl_tail)


State 476

  250 direct_adecl_tail: direct_adecl_tail '(' opt_param_type_list . ')'

    ')'  shift, and go to state 479


State 477

  240 direct_abstract_declarator: '(' abstract_declarator ')' $@27 opt_direct_adecl_tail .

    $default  reduce using rule 240 (direct_abstract_declarator)


State 478

  242 direct_abstract_declarator: '(' opt_param_type_list ')' $@28 opt_direct_adecl_tail .

    $default  reduce using rule 242 (direct_abstract_declarator)


State 479

  250 direct_adecl_tail: direct_adecl_tail '(' opt_param_type_list ')' .

    $default  reduce using rule 250 (direct_adecl_tail)
