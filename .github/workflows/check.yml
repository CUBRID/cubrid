name: Check
on: 
  pull_request:
    branches: [ develop ]
jobs:
  license:
    name: license
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jitterbit/get-changed-files@v1
        id: files
      - name: Check license
        run: |
          license_header=.github/workflows/license_header.txt
          license_lines=`wc -l < $license_header`

          for f in ${{ steps.files.outputs.added_modified }}; do
            echo "Checking $f"
            head -n $license_lines $f | cmp -s $license_header
          done
  pr-style:
    name: pr-style
    runs-on: ubuntu-latest
    steps:
      - uses: deepakputhraya/action-pr-title@master
        with:
          regex: '^\[[A-Z]+-\d+\]\s.+' # Regex the title should match.
  code-style:
    name: code-style
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: |
          # dependencies to build GNU indent
          sudo apt-get -yq install build-essential texi2html wget
          
          # install astyle
          sudo apt-get -yq install astyle
          
          # indent 2.2.11, the lastest version (2.2.12) make a different result
          wget https://ftp.gnu.org/gnu/indent/indent-2.2.11.tar.gz
          tar xf indent-2.2.11.tar.gz
          cd indent-2.2.11
          ./configure
          sudo make -j install
          cd ..
      - uses: actions/checkout@v2
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Check code style
        id: stylecheck
        run: |
          for f in ${{ steps.files.outputs.added_modified }}; do
            .github/workflows/codestyle.sh ${f}
          done 
          git diff | tee gitdiff
          test ! -s gitdiff # is empty? yes: 0 no: 1
      - name: Suggest code changes
        if: ${{ failure() }}
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: code-style (indent, astyle)
  cppcheck:
    name: cppcheck
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: sudo apt-get install -yq cppcheck 
      - uses: actions/checkout@v2
      - name: cppcheck
        run: |
          # to suppress other error, add it to .github/workflows/cppcheck-spr-list
          cppcheck --force -j4 --suppressions-list=.github/workflows/cppcheck-spr-list --enable=warning -iheaplayers src 2>cppcheck.result 
          echo "errors: `cat cppcheck.result | grep " error: " | wc -l`" > cppcheck.summary
          echo "warnings: `cat cppcheck.result | grep " warning: " | wc -l`" >> cppcheck.summary

          echo "-----------------------------Summary-------------------------------------"
          cat cppcheck.summary

          ! cat cppcheck.result | grep " error: " 1>/dev/null # if has errors, fail
      - name: Get cppcheck.summary
        id: get-comment-body
        if: ${{ failure() }}
        run: |
          body=$(cat cppcheck.summary)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo ::set-output name=body::$body
      - name: Report cppcheck.summary
        if: ${{ failure() }}
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          check_for_duplicate_msg: true  # OPTIONAL 
          msg: |
            **cppcheck**
            ${{ steps.get-comment-body.outputs.body }}
